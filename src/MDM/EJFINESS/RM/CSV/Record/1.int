ROUTINE MDM.EJFINESS.RM.CSV.Record.1 [Type=INT,Generated]
 ;MDM.EJFINESS.RM.CSV.Record.1
 ;Generated for class MDM.EJFINESS.RM.CSV.Record.  Do NOT edit. 09/09/2020 02:18:27PM
 ;;4E2B5A52;MDM.EJFINESS.RM.CSV.Record
 ;
SQLUPPER(v,l) { quit $zu(28,v,7,$g(l,32767)) }
ALPHAUP(v,r) { quit $zu(28,v,6) }
STRING(v,l) { quit $zu(28,v,9,$g(l,32767)) }
SQLSTRING(v,l) { quit $zu(28,v,8,$g(l,32767)) }
UPPER(v) { quit $zu(28,v,5) }
MVR(v) { quit $zu(28,v,2) }
TRUNCATE(v,l) { quit $e(v,1,$g(l,3641144)) }
%BindExport(dev,Seen,RegisterOref,AllowedDepth,AllowedCapacity) public {
   i $d(Seen(+$this)) q 1
   Set Seen(+$this)=$this
   s sc = 1
 s proporef=..%ParentBatch
   d:RegisterOref InitObjVar^%SYS.BINDSRV($this)
   i dev'="" s t=$io u dev i $zobjexport($this_"",3)+$zobjexport($this."%%OID",3)+$zobjexport($this,3)!1 u t
 If AllowedDepth>0 Set AllowedDepth = AllowedDepth - 1
 If AllowedCapacity>0 Set AllowedCapacity = AllowedCapacity - 1/1
 s proporef=..%ParentBatch
       i proporef'="" s sc=1 i AllowedDepth'=0,AllowedCapacity'=0 s sc=proporef.%BindExport(dev,.Seen,RegisterOref,AllowedDepth,AllowedCapacity) q:('sc) sc
   Quit sc }
%BuildDeferredIndices(lockFlag=0,journalFlag=1) public {
	return $$Error^%apiOBJ(5758,"%Storage.Persistent::%BuildDeferredIndices") }
%BuildIndices(pIndexList="",pAutoPurge=1,pLockFlag=0,pJournalFlag="",pStartID="",pEndID="",pIgnoreIndexList="") public {
	if ($listlength(pIndexList)=1)&&($listget(pIndexList,1)="") { return 1 }
	Set class=$classname(),tBuildFlags=1,tBuildFlags(class)=$c(0)
	Set tPtr=0,tStatus=1
	While $listnext(pIndexList,tPtr,tIndex) {
		continue:tIndex=""
		If '$d(^oddCOM(class,"i",tIndex)) {
			Set tStatus=$select(+tStatus:$$Error^%apiOBJ(5066,class_"::"_tIndex),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5066,class_"::"_tIndex)))
		}
	}
	If ('tStatus) RETURN tStatus
	if ((pIndexList="")||($listfind(pIndexList,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") { set $Extract(tBuildFlags(class),1)=$c(1) }
	Quit ..%BuildIndexInternal(.pLockFlag,.pAutoPurge,.pStartID,.pEndID,.pIndexList,.tBuildFlags,"^MDM.EJFINESS.RM.CSV.RecordD",0,.pJournalFlag,0) }
%BuildIndicesSegment(pStartID,pEndID,pIndexHandle=0,pLockFlag=1,pFirstRange=0,pJob="") public {
	New %tIndexBuffer
	Try {
		set tStatus=1,tLocked=0
		If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1),$SortBegin(^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx")),$increment(^IRIS.TempIndexBuild(pJob,1)) { Do $system.Event.Create($name(^IRIS.TempIndexBuild(pJob,1))) }
		Set tPrefetch=$prefetchon(^MDM.EJFINESS.RM.CSV.RecordD)
		If 'pFirstRange||('$data(^MDM.EJFINESS.RM.CSV.RecordD(pStartID))) { Set tID=$order(^MDM.EJFINESS.RM.CSV.RecordD(pStartID)) } Else { Set tID=pStartID }
		While tID'="",(pEndID="")||(tID']]pEndID) {
			If pLockFlag=2 {
				Set tSC = ..%LockId(tID,1)
				If ('tSC) {
					Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
					Set tID=$order(^MDM.EJFINESS.RM.CSV.RecordD(tID))
					Continue
				}
			}
			If pLockFlag'=2||($data(^MDM.EJFINESS.RM.CSV.RecordD(tID))) {
				Set tSC=..%FileIndices(tID,.pIndexHandle)
				If ('tSC) { Set tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC)) }
			}
			Do:pLockFlag=2 ..%UnlockId(tID,1,1)
			set tID=$order(^MDM.EJFINESS.RM.CSV.RecordD(tID))
		}
	}
	Catch tException {
		Set tSC=tException.AsStatus(),tStatus=$select(+tStatus:tSC,1:$$AppendStatus^%occSystem(tStatus,tSC))
	}
	If pLockFlag'=2,$Ascii(pIndexHandle($classname()),1) {
		If $increment(^IRIS.TempIndexBuild(pJob,1),-1)=0 { Do $system.Event.Delete($name(^IRIS.TempIndexBuild(pJob,1))) } Else { Try { Do $system.Event.Wait($name(^IRIS.TempIndexBuild(pJob,1))) } Catch {} }
		If $SortEnd(^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx")) {}
	}
	Set:$Get(tPrefetch) tPrefetch=$prefetchoff(^MDM.EJFINESS.RM.CSV.RecordD)
	Quit tStatus }
%CheckConstraints(pID,pConstraintList="",pCheckDisabled=0,pErrorInfo) [ SQLCODE,pID,tCol1 ] public { New SQLCODE,tCol1 
	set tStatus = ..%OnDetermineClass($select(pID="":"",1:$listbuild(pID_"")),.tMSTC) if ('tStatus) { set pErrorInfo = $Listbuild(pID) quit tStatus } if tMSTC '= $classname() { quit $classmethod(tMSTC,"%CheckConstraints",pID,pConstraintList) }
	set tStatus = 1, pErrorInfo = ""
	 ;---&sql(select %ParentBatch INTO :tCol1 FROM MDM_EJFINESS_RM_CSV.Record WHERE %ID = :pID)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, pID, tCol1
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEqjdBHMkFR7hWhlnewM8cFUsl76","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEqjdBHMkFR7hWhlnewM8cFUsl76")||($ze["<ZSQLU>") { d %0dsqlA } else { throw } }
	if 'SQLCODE {
		if ((pConstraintList="")||($lf(pConstraintList,"%ParentBatch"))) && (('..%ParentBatchCheck(tCol1))) { set tStatus = $select(+tStatus:$$Error^%apiOBJ(5824,$classname()_".%ParentBatch("_$zu(144,1,tCol1)_")"),1:$$AppendStatus^%occSystem(tStatus,$$Error^%apiOBJ(5824,$classname()_".%ParentBatch("_$zu(144,1,tCol1)_")"))) }
		set pErrorInfo = $Listbuild(pID,tCol1)
	} elseif SQLCODE < 0 { set tStatus = $$Error^%apiOBJ(5540,SQLCODE,$Get(%msg)) }
	quit tStatus }
 q
%0dsqlA	n %xxsql
	s %xxsql("S",1)="SELECT %ParentBatch INTO :tCol1 FROM MDM_EJFINESS_RM_CSV . Record WHERE %ID = :pID"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1)
	s %xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1),%xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")="",%xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),,"MDM.EJFINESS.RM.CSV.Record.CLS")
	q
%CheckConstraintsForExtent(pConstraintList="",pCheckDisabled=0,pErrorLog) [ SQLCODE,tID ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE,tID 
	kill pErrorLog set tStatusAll = 1, pErrorLog = 0 if '$listvalid(pConstraintList) { set pConstraintList = $listfromstring(pConstraintList) }
	 ;---&sql(declare ext cursor for select %ID into :tID FROM MDM_EJFINESS_RM_CSV.Record)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, tID
	 
	 ;---&sql(open ext)
	try { if $g(%ext0209)'="" { s SQLCODE=-101 } else { s %ext0209=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEUoRpRE74vobi9gzvVtajPlKiWi","%New") if '$isobject(%ext0209) s %ext0209=$$%0dsqlC() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEUoRpRE74vobi9gzvVtajPlKiWi")||($ze["<ZSQLU>") { s %ext0209=$$%0dsqlC() } else { throw } }
	if SQLCODE '< 0 {
		for {
			 ;---&sql(fetch ext)
 			 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
			if $isobject($g(%ext0209))'=1 { s SQLCODE=-102 } else { do %ext0209.FET() if SQLCODE=0 { } }
			if SQLCODE { if SQLCODE=100 { quit } elseif SQLCODE<0 { set tStatusAll = $select(+tStatusAll:$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)),1:$$AppendStatus^%occSystem(tStatusAll,$$Error^%apiOBJ(5521,SQLCODE,$Get(%msg)))) quit } }
			set tStatus = ..%CheckConstraints(tID,pConstraintList,pCheckDisabled,.tErrorInfo)
			if ('tStatus) { set tStatusAll = $select(+tStatusAll:tStatus,1:$$AppendStatus^%occSystem(tStatusAll,tStatus)) set:pErrorLog<1000 pErrorLog = pErrorLog + 1, pErrorLog(pErrorLog) = tErrorInfo _ $Listbuild(tStatus) }
		}
		 ;---&sql(close ext)
		if '$isobject($get(%ext0209)) { set SQLCODE=-102 } else { set SQLCODE=0 kill %ext0209 }
	}
	quit tStatusAll }
 q
%0dsqlC()	n %xxsql
	s %xxsql("S",1)="DECLARE ext CURSOR FOR SELECT %ID INTO :tID FROM MDM_EJFINESS_RM_CSV . Record"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1)
	s %xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1),%xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")=""
	s %xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")="",%xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),",0,ext,","MDM.EJFINESS.RM.CSV.Record.CLS",1)
%ComposeOid(id) public {
	set tCLASSNAME = $listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),1)
	if tCLASSNAME="" { quit $select(id="":"",1:$listbuild(id_"","MDM.EJFINESS.RM.CSV.Record")) }
	set tClass=$piece(tCLASSNAME,$extract(tCLASSNAME),*-1)
	set:tClass'["." tClass="User."_tClass
	quit $select(id="":"",1:$listbuild(id_"",tClass)) }
%DeleteData(id,concurrency) public {
	Quit:id="" $$Error^%apiOBJ(5812)
	set $Ztrap="DeleteDataERR" set lockok=0,sc=""
	If concurrency {
		Lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4)
		Set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0))
		Set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1
		If 'lockok {
			Quit $$Error^%apiOBJ(5803,$classname())
		}
	}
	If ($Data(^MDM.EJFINESS.RM.CSV.RecordD(id))) {
		Set bsv0N1=^MDM.EJFINESS.RM.CSV.RecordD(id)
		If $data(^oddEXTR($classname())) {
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"%1","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"%1","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
			Set fc=""
			For {
				Set fc=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc))
				Quit:fc=""
				Set fk=""
				For {
					Set fk=$order(^rINDEXEXT("F",$classname(),"IDKEY","f",fc,fk))
					Quit:fk=""
					Set sc=$classmethod(fc,fk_"Delete",id)
					If ('sc) { Goto DeleteDataEXIT }
				}
			}
		}
		Set bsv0N2=$listget(bsv0N1,43)
		Kill ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",$s(bsv0N2'="":bsv0N2,1:-1E14),id)
		Kill ^MDM.EJFINESS.RM.CSV.RecordD(id)
		Set sc=1
	}
	Else { Set sc=$$Error^%apiOBJ(5810,$classname(),id) }
DeleteDataEXIT
	If concurrency,lockok {
		Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E")
	}
DeleteDataRET	Set $Ztrap = ""
	QUIT sc
DeleteDataERR	Set $Ztrap = "DeleteDataRET"
	Set sc = $$Error^%apiOBJ(5002,$ZE)
	Goto DeleteDataEXIT }
%Exists(oid="") public {
	Quit ..%ExistsId($listget(oid)) }
%ExistsId(id) public {
	Try { set tExists = $s(id="":0,$d(^MDM.EJFINESS.RM.CSV.RecordD(id)):1,1:0) } catch tException { set tExists = 0 if '(tException.%IsA("%Exception.SystemException")) { throw tException } elseif tException.Name'="<SUBSCRIPT>" { ZT $ZE } } quit tExists }
%FileIndices(id,pIndexHandle=0) public {
	Set $ZTrap="CatchError",sc=1
	Set bsv0N2=$Get(^MDM.EJFINESS.RM.CSV.RecordD(id))
	Set bsv0N3=$listget(bsv0N2,1)
	If bsv0N3'="" {
		Set bsv0N1=$piece(bsv0N3,$extract(bsv0N3),*-1)
		Set:bsv0N1'["." bsv0N1="User."_bsv0N1
		If bsv0N1'="" {
			Quit $classmethod(bsv0N1,"%FileIndices",id,.pIndexHandle)
		}
	}
	If ('pIndexHandle)||($Ascii($Get(pIndexHandle("MDM.EJFINESS.RM.CSV.Record")),1)=1) {
		Set bsv0N4=$listget(bsv0N2,43)
		Set bsv0N5=$s(bsv0N4'="":bsv0N4,1:-1E14)
		Set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",bsv0N5,id)=$listget(bsv0N2,1)
	}
	QUIT 1
CatchError	s $ZTrap="" i $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) } q sc }
%ForceId() public {
	If (..%Id() = "") Do ..%IdSet($increment(^MDM.EJFINESS.RM.CSV.RecordD))
	Quit ..%Id() }
%InsertBatch(objects,concurrency=0,useTransactions=0) public {
	try {
		set numerrs=0,errs="",cnt=0,ptr=0
		while $listnext(objects,ptr,data) {
			set cnt=cnt+1
			set zzc9v1=$listget(data,43)
			set lock=0
			if (useTransactions) tstart
			set id=$i(^MDM.EJFINESS.RM.CSV.RecordD)
			if (zzc9v1'="")&&('##class(MDM.EJFINESS.RM.CSV.Batch).%ExistsId(zzc9v1)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"MDM.EJFINESS.RM.CSV.Record.%ParentBatch("_$zu(144,1,zzc9v1)_")")) }
			try {
				set tInnerException = ""
				;
				if concurrency { lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				set ^MDM.EJFINESS.RM.CSV.RecordD(id)=data
				set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",$s(zzc9v1'="":zzc9v1,1:-1E14),id)=$listget(data,1)
				if (useTransactions) { tcommit }
			}
			catch tInnerException {
				set newerr=$lb(cnt,tInnerException.AsStatus())
				if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
				if (useTransactions) && ($Tlevel) trollback
			}
			if lock lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E")
		}
	}
	catch tException {
		set newerr=$lb($g(cnt),tException.AsStatus())
		if '($length(errs)+$length(newerr)>32767) { set numerrs=numerrs+1, errs=errs_newerr }
	}
	QUIT ($lb(numerrs))_errs }
%KillExtentData(killstreams=0)
	Set $sequence(^MDM.EJFINESS.RM.CSV.RecordD)=""
	If killstreams Kill ^MDM.EJFINESS.RM.CSV.RecordS
	Kill ^MDM.EJFINESS.RM.CSV.RecordD
	Quit 1
%LoadData(id) public {
	New %s1
	set $ZTrap="CatchError",locked=0,userze=$ze,$ze=""
	If i%%Concurrency=4 {
		Lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5803,$classname())
	} ElseIf i%%Concurrency>1 {
		Lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SE"):$zu(115,4)
		if '$t do init s i%%Concurrency=0 s:$ze="" $ze=userze return $$Error^%apiOBJ(5804,$classname())
		set locked = 1
	}
	If $d(^MDM.EJFINESS.RM.CSV.RecordD(id),%s1)#2 {
		If i%%Concurrency=2 { Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SIE") }
		S i%NuméroFINESSEJ=$lg(%s1,2),i%%Source=$lg(%s1,3),i%Raisonsocialelongue=$lg(%s1,4),i%Complémentraisonsociale=$lg(%s1,5),i%Codestatutjuridique=$lg(%s1,6),i%Libelléstatutjuridique=$lg(%s1,7),i%Libellécourtstatutjuridique=$lg(%s1,8),i%CodecatégorieEtablissement=$lg(%s1,9),i%LibellécatégorieEtablissement=$lg(%s1,10)
		Set iscpos=$l($li(%s1,1,10))+1,isctmp=$li($e(%s1,iscpos,*),1,10),i%LibellécourtcatégorieEtablissement=$lg(isctmp),i%NuméroSIREN=$lg(isctmp,2),i%DatemodificationSIREN=$lg(isctmp,3),i%OriginemodificationSIREN=$lg(isctmp,4),i%CodeAPE=$lg(isctmp,5),i%LibelléAPE=$lg(isctmp,6),i%Datecréation=$lg(isctmp,7),i%Datemàjstructure=$lg(isctmp,8),i%Datefermeture=$lg(isctmp,9),i%Typefermeture=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Qualificationcréation=$lg(isctmp),i%Complémentdestinataire=$lg(isctmp,2),i%Complémentpointgéographique=$lg(isctmp,3),i%Numérovoie=$lg(isctmp,4),i%Indicerépétitionvoie=$lg(isctmp,5),i%Codetypedevoie=$lg(isctmp,6),i%Libellétypedevoie=$lg(isctmp,7),i%Libellévoie=$lg(isctmp,8),i%Mentiondistribution=$lg(isctmp,9),i%CodePostal=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Bureaucedex=$lg(isctmp),i%Codecommune=$lg(isctmp,2),i%Libellécommune=$lg(isctmp,3),i%Libellécourtcommune=$lg(isctmp,4),i%Codedépartement=$lg(isctmp,5),i%Libellédépartement=$lg(isctmp,6),i%Codepays=$lg(isctmp,7),i%Libellépays=$lg(isctmp,8),i%Téléphone=$lg(isctmp,9),i%Téléphone2=$lg(isctmp,10)
		S isctmp=$e(%s1,iscpos+$l(isctmp),*),i%Télécopie=$lg(isctmp),i%Adressemail=$lg(isctmp,2),i%%ParentBatch=$lg(isctmp,3),i%Raisonsociale=$lg(isctmp,4)
		s:$ze="" $ze=userze
		Quit 1
	} Else {
		If i%%Concurrency=2 { Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SIE") }
		do init
		set sc = $$Error^%apiOBJ(5809,$classname(),id) goto CatchError
	}
CatchError	set $ZTrap = "" if $ZE'="" { s sc = $$Error^%apiOBJ(5002,$ZE) }
	If ($get(locked))&&(i%%Concurrency<3) { Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SIE") }
	if '('sc) { set sc=$$Error^%apiOBJ(5809,$classname(),id) }
	s:$ze="" $ze=userze
	return sc
init	Set i%%ParentBatch="",i%%Source="",i%Adressemail="",i%Bureaucedex="",i%CodeAPE="",i%CodePostal="",i%CodecatégorieEtablissement="",i%Codecommune="",i%Codedépartement="",i%Codepays="",i%Codestatutjuridique="",i%Codetypedevoie="",i%Complémentdestinataire="",i%Complémentpointgéographique="",i%Complémentraisonsociale="",i%Datecréation="",i%Datefermeture="",i%DatemodificationSIREN="",i%Datemàjstructure="",i%Indicerépétitionvoie="",i%LibelléAPE="",i%LibellécatégorieEtablissement="",i%Libellécommune="",i%LibellécourtcatégorieEtablissement=""
	Set i%Libellécourtcommune="",i%Libellécourtstatutjuridique="",i%Libellédépartement="",i%Libellépays="",i%Libelléstatutjuridique="",i%Libellétypedevoie="",i%Libellévoie="",i%Mentiondistribution="",i%NuméroFINESSEJ="",i%NuméroSIREN="",i%Numérovoie="",i%OriginemodificationSIREN="",i%Qualificationcréation="",i%Raisonsociale="",i%Raisonsocialelongue="",i%Typefermeture="",i%Télécopie="",i%Téléphone="",i%Téléphone2=""
	quit }
%LoadDataFromMemory(id,objstate,obj) public {
	New %s1
	If $d(objstate(id)) {
		Set %s1=$g(objstate(id))
		S i%NuméroFINESSEJ=$lg(%s1,2),i%%Source=$lg(%s1,3),i%Raisonsocialelongue=$lg(%s1,4),i%Complémentraisonsociale=$lg(%s1,5),i%Codestatutjuridique=$lg(%s1,6),i%Libelléstatutjuridique=$lg(%s1,7),i%Libellécourtstatutjuridique=$lg(%s1,8),i%CodecatégorieEtablissement=$lg(%s1,9),i%LibellécatégorieEtablissement=$lg(%s1,10)
		Set iscpos=$l($li(%s1,1,10))+1,isctmp=$li($e(%s1,iscpos,*),1,10),i%LibellécourtcatégorieEtablissement=$lg(isctmp),i%NuméroSIREN=$lg(isctmp,2),i%DatemodificationSIREN=$lg(isctmp,3),i%OriginemodificationSIREN=$lg(isctmp,4),i%CodeAPE=$lg(isctmp,5),i%LibelléAPE=$lg(isctmp,6),i%Datecréation=$lg(isctmp,7),i%Datemàjstructure=$lg(isctmp,8),i%Datefermeture=$lg(isctmp,9),i%Typefermeture=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Qualificationcréation=$lg(isctmp),i%Complémentdestinataire=$lg(isctmp,2),i%Complémentpointgéographique=$lg(isctmp,3),i%Numérovoie=$lg(isctmp,4),i%Indicerépétitionvoie=$lg(isctmp,5),i%Codetypedevoie=$lg(isctmp,6),i%Libellétypedevoie=$lg(isctmp,7),i%Libellévoie=$lg(isctmp,8),i%Mentiondistribution=$lg(isctmp,9),i%CodePostal=$lg(isctmp,10)
		Set iscpos=iscpos+$l(isctmp),isctmp=$li($e(%s1,iscpos,*),1,10),i%Bureaucedex=$lg(isctmp),i%Codecommune=$lg(isctmp,2),i%Libellécommune=$lg(isctmp,3),i%Libellécourtcommune=$lg(isctmp,4),i%Codedépartement=$lg(isctmp,5),i%Libellédépartement=$lg(isctmp,6),i%Codepays=$lg(isctmp,7),i%Libellépays=$lg(isctmp,8),i%Téléphone=$lg(isctmp,9),i%Téléphone2=$lg(isctmp,10)
		S isctmp=$e(%s1,iscpos+$l(isctmp),*),i%Télécopie=$lg(isctmp),i%Adressemail=$lg(isctmp,2),i%%ParentBatch=$lg(isctmp,3),i%Raisonsociale=$lg(isctmp,4)
		Quit 1
	} Else {
		Set i%%ParentBatch="",i%%Source="",i%Adressemail="",i%Bureaucedex="",i%CodeAPE="",i%CodePostal="",i%CodecatégorieEtablissement="",i%Codecommune="",i%Codedépartement="",i%Codepays="",i%Codestatutjuridique="",i%Codetypedevoie="",i%Complémentdestinataire="",i%Complémentpointgéographique="",i%Complémentraisonsociale="",i%Datecréation="",i%Datefermeture="",i%DatemodificationSIREN="",i%Datemàjstructure="",i%Indicerépétitionvoie="",i%LibelléAPE="",i%LibellécatégorieEtablissement="",i%Libellécommune="",i%LibellécourtcatégorieEtablissement=""
		Set i%Libellécourtcommune="",i%Libellécourtstatutjuridique="",i%Libellédépartement="",i%Libellépays="",i%Libelléstatutjuridique="",i%Libellétypedevoie="",i%Libellévoie="",i%Mentiondistribution="",i%NuméroFINESSEJ="",i%NuméroSIREN="",i%Numérovoie="",i%OriginemodificationSIREN="",i%Qualificationcréation="",i%Raisonsociale="",i%Raisonsocialelongue="",i%Typefermeture="",i%Télécopie="",i%Téléphone="",i%Téléphone2=""
		Quit $$Error^%apiOBJ(5809,$classname(),id)
	} }
%LoadInit(oid="",concurrency="",reset=0) public {
	Set:concurrency'="" i%%Concurrency=concurrency
	If reset {
		Kill i%%ParentBatch
	}
	Set r%%ParentBatch=""
	If 'reset { Set gbl=..#DATALOCATIONGLOBAL If gbl="" { Set oref=$zobjoid("",$listget(oid)),sfn=$zu(40,0,41) } Else { Set oref=$zobjoid("",$listget(oid),@gbl,.sfn) } Set $zobjoid("",$listget(oid),,sfn)=$this,i%"%%OID"=oid }
	Quit 1 }
%LockExtent(shared=0) public {
	If shared {
		Lock +(^MDM.EJFINESS.RM.CSV.RecordD#"S"):$zu(115,4) Quit:$t 1
		Quit $$Error^%apiOBJ(5799,$classname())
	}
	Lock +(^MDM.EJFINESS.RM.CSV.RecordD):$zu(115,4) Quit:$t 1
	Quit $$Error^%apiOBJ(5798,$classname()) }
%LockId(id,shared=0,timeout) public { s:'($d(timeout)#2) timeout=$zu(115,4)
	If id="" { Quit $$Error^%apiOBJ(5812) }
	Set sc=1
	If 'shared {
		Lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):timeout Quit:$t 1
		Quit $$Error^%apiOBJ(5803,id_":"_$classname())
	}
	Lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SE"):timeout Quit:$t 1
	Quit $$Error^%apiOBJ(5804,id_":"_$classname()) }
%NormalizeObject() public {
	If '$system.CLS.GetModified() Quit 1
	If m%%Source Set:i%%Source'="" i%%Source=(..%SourceNormalize(i%%Source))
	If m%Adressemail Set:i%Adressemail'="" i%Adressemail=(..AdressemailNormalize(i%Adressemail))
	If m%Bureaucedex Set:i%Bureaucedex'="" i%Bureaucedex=(..BureaucedexNormalize(i%Bureaucedex))
	If m%CodeAPE Set:i%CodeAPE'="" i%CodeAPE=(..CodeAPENormalize(i%CodeAPE))
	If m%CodePostal Set:i%CodePostal'="" i%CodePostal=(..CodePostalNormalize(i%CodePostal))
	If m%CodecatégorieEtablissement Set:i%CodecatégorieEtablissement'="" i%CodecatégorieEtablissement=(..CodecatégorieEtablissementNormalize(i%CodecatégorieEtablissement))
	If m%Codecommune Set:i%Codecommune'="" i%Codecommune=(..CodecommuneNormalize(i%Codecommune))
	If m%Codedépartement Set:i%Codedépartement'="" i%Codedépartement=(..CodedépartementNormalize(i%Codedépartement))
	If m%Codepays Set:i%Codepays'="" i%Codepays=(..CodepaysNormalize(i%Codepays))
	If m%Codestatutjuridique Set:i%Codestatutjuridique'="" i%Codestatutjuridique=(..CodestatutjuridiqueNormalize(i%Codestatutjuridique))
	If m%Codetypedevoie Set:i%Codetypedevoie'="" i%Codetypedevoie=(..CodetypedevoieNormalize(i%Codetypedevoie))
	If m%Complémentdestinataire Set:i%Complémentdestinataire'="" i%Complémentdestinataire=(..ComplémentdestinataireNormalize(i%Complémentdestinataire))
	If m%Complémentpointgéographique Set:i%Complémentpointgéographique'="" i%Complémentpointgéographique=(..ComplémentpointgéographiqueNormalize(i%Complémentpointgéographique))
	If m%Complémentraisonsociale Set:i%Complémentraisonsociale'="" i%Complémentraisonsociale=(..ComplémentraisonsocialeNormalize(i%Complémentraisonsociale))
	If m%Datecréation Set:i%Datecréation'="" i%Datecréation=(..DatecréationNormalize(i%Datecréation))
	If m%Datefermeture Set:i%Datefermeture'="" i%Datefermeture=(..DatefermetureNormalize(i%Datefermeture))
	If m%DatemodificationSIREN Set:i%DatemodificationSIREN'="" i%DatemodificationSIREN=(..DatemodificationSIRENNormalize(i%DatemodificationSIREN))
	If m%Datemàjstructure Set:i%Datemàjstructure'="" i%Datemàjstructure=(..DatemàjstructureNormalize(i%Datemàjstructure))
	If m%Indicerépétitionvoie Set:i%Indicerépétitionvoie'="" i%Indicerépétitionvoie=(..IndicerépétitionvoieNormalize(i%Indicerépétitionvoie))
	If m%LibelléAPE Set:i%LibelléAPE'="" i%LibelléAPE=(..LibelléAPENormalize(i%LibelléAPE))
	If m%LibellécatégorieEtablissement Set:i%LibellécatégorieEtablissement'="" i%LibellécatégorieEtablissement=(..LibellécatégorieEtablissementNormalize(i%LibellécatégorieEtablissement))
	If m%Libellécommune Set:i%Libellécommune'="" i%Libellécommune=(..LibellécommuneNormalize(i%Libellécommune))
	If m%LibellécourtcatégorieEtablissement Set:i%LibellécourtcatégorieEtablissement'="" i%LibellécourtcatégorieEtablissement=(..LibellécourtcatégorieEtablissementNormalize(i%LibellécourtcatégorieEtablissement))
	If m%Libellécourtcommune Set:i%Libellécourtcommune'="" i%Libellécourtcommune=(..LibellécourtcommuneNormalize(i%Libellécourtcommune))
	If m%Libellécourtstatutjuridique Set:i%Libellécourtstatutjuridique'="" i%Libellécourtstatutjuridique=(..LibellécourtstatutjuridiqueNormalize(i%Libellécourtstatutjuridique))
	If m%Libellédépartement Set:i%Libellédépartement'="" i%Libellédépartement=(..LibellédépartementNormalize(i%Libellédépartement))
	If m%Libellépays Set:i%Libellépays'="" i%Libellépays=(..LibellépaysNormalize(i%Libellépays))
	If m%Libelléstatutjuridique Set:i%Libelléstatutjuridique'="" i%Libelléstatutjuridique=(..LibelléstatutjuridiqueNormalize(i%Libelléstatutjuridique))
	If m%Libellétypedevoie Set:i%Libellétypedevoie'="" i%Libellétypedevoie=(..LibellétypedevoieNormalize(i%Libellétypedevoie))
	If m%Libellévoie Set:i%Libellévoie'="" i%Libellévoie=(..LibellévoieNormalize(i%Libellévoie))
	If m%Mentiondistribution Set:i%Mentiondistribution'="" i%Mentiondistribution=(..MentiondistributionNormalize(i%Mentiondistribution))
	If m%NuméroFINESSEJ Set:i%NuméroFINESSEJ'="" i%NuméroFINESSEJ=(..NuméroFINESSEJNormalize(i%NuméroFINESSEJ))
	If m%NuméroSIREN Set:i%NuméroSIREN'="" i%NuméroSIREN=(..NuméroSIRENNormalize(i%NuméroSIREN))
	If m%Numérovoie Set:i%Numérovoie'="" i%Numérovoie=(..NumérovoieNormalize(i%Numérovoie))
	If m%OriginemodificationSIREN Set:i%OriginemodificationSIREN'="" i%OriginemodificationSIREN=(..OriginemodificationSIRENNormalize(i%OriginemodificationSIREN))
	If m%Qualificationcréation Set:i%Qualificationcréation'="" i%Qualificationcréation=(..QualificationcréationNormalize(i%Qualificationcréation))
	If m%Raisonsociale Set:i%Raisonsociale'="" i%Raisonsociale=(..RaisonsocialeNormalize(i%Raisonsociale))
	If m%Raisonsocialelongue Set:i%Raisonsocialelongue'="" i%Raisonsocialelongue=(..RaisonsocialelongueNormalize(i%Raisonsocialelongue))
	If m%Typefermeture Set:i%Typefermeture'="" i%Typefermeture=(..TypefermetureNormalize(i%Typefermeture))
	If m%Télécopie Set:i%Télécopie'="" i%Télécopie=(..TélécopieNormalize(i%Télécopie))
	If m%Téléphone Set:i%Téléphone'="" i%Téléphone=(..TéléphoneNormalize(i%Téléphone))
	If m%Téléphone2 Set:i%Téléphone2'="" i%Téléphone2=(..Téléphone2Normalize(i%Téléphone2))
	Quit 1 }
%OnDetermineClass(oid,class) public {
	Set id=$listget($get(oid))
	Quit:id="" $$Error^%apiOBJ(5812)
	Set idclass=$lg($get(^MDM.EJFINESS.RM.CSV.RecordD(id)),1)
	If idclass="" { Set class="MDM.EJFINESS.RM.CSV.Record" Quit 1 }
	Set class=$piece(idclass,$extract(idclass),*-1)
	Set:class'["." class="User."_class
	QUIT 1 }
%PhysicalAddress(id,paddr)
	if $Get(id)="" Quit $$Error^%apiOBJ(5813,$classname())
	if (id="") { quit $$Error^%apiOBJ(5832,$classname(),id) }
	s paddr(1)=$lb($Name(^MDM.EJFINESS.RM.CSV.RecordD(id)),$classname(),"IDKEY","listnode",id)
	s paddr=1
	Quit 1
%PurgeIndices(idxlist="",lockExtent=0,pIgnoreIndexList="") public {
	Set locked=0,sc=1
	Try {
		if ($listlength(idxlist)=1)&&($listget(idxlist,1)="") { return 1 }
		Set tPtr=0
		While $listnext(idxlist,tPtr,tIndex) {
			continue:tIndex=""
			If '($d(^oddCOM($classname(),"i",tIndex))) {
				Set sc=$select(+sc:$$Error^%apiOBJ(5066,$classname()_"::"_tIndex),1:$$AppendStatus^%occSystem(sc,$$Error^%apiOBJ(5066,$classname()_"::"_tIndex)))
			}
		}
		If ('sc) { Return sc }
		If lockExtent {
			Set sc=..%LockExtent(0)
			If ('sc) { Return sc }
			Set locked=1
		}
		If $system.CLS.IsMthd("%OnBeforePurgeIndices") {
			Set sc=..%OnBeforePurgeIndices(.idxlist)
			If (('sc))||(($listlength(idxlist)=1)&&($listget(idxlist,1)="")) {
				If locked {
					Do ..%SQLReleaseTableLock(0)
				}
				Return sc
			}
		}
		if ((idxlist="")||($listfind(idxlist,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") {
			kill ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx")
		}
		Set sc=1
		If $system.CLS.IsMthd("%OnAfterPurgeIndices") { Set sc=..%OnAfterPurgeIndices(.idxlist) }
	} Catch tException {
		Set sc=tException.AsStatus(),$ZE=""
	}
	If locked { Do ..%UnlockExtent(0) }
	Quit sc }
%SQLAcquireLock(%rowid,s=0,unlockref=0)
	new %d,gotlock
	set %d(1)=%rowid set s=$e("E",'unlockref)_$e("S",s)
	lock +^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#s:$zu(115,4) set gotlock=$t
	if gotlock,'unlockref { set:$case($SYSTEM.Lock.ReturnCode(),2:1,4:1,:0)&&($tlevel) %0CacheLock("MDM.EJFINESS.RM.CSV.Record","E")=1 }
	set:gotlock&&unlockref unlockref=unlockref+1,unlockref(unlockref)=$lb($name(^MDM.EJFINESS.RM.CSV.RecordD(%d(1))),"MDM.EJFINESS.RM.CSV.Record",s_"D")
	QUIT gotlock
%SQLAcquireTableLock(s=0,SQLCODE,to="")
	set s=$e("S",s) set:to="" to=$zu(115,4) lock +^MDM.EJFINESS.RM.CSV.RecordD#s:to QUIT:$t 1 set SQLCODE=-110 if s="S" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler35",,"MDM_EJFINESS_RM_CSV"_"."_"Record") } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler36",,"MDM_EJFINESS_RM_CSV"_"."_"Record") } QUIT 0
	Return
%SQLBuildIndices(pIndices="",pLockFlag=0,pStartID="",pEndID="",pIgnoreIndexList="")
	QUIT ..%BuildIndices(pIndices,,pLockFlag,,pStartID,pEndID,pIgnoreIndexList)
%SQLBuildPurgeIndexForRow(pIndices="",pActions="BP",pLockRow=1,%d,%e,pIgnoreIndexList="")
	// Purge and build index nodes for a single row using given values, return Status Code
	new sn,tSC,tLock set tSC=1,pActions=$zcvt(pActions,"U")
	try {
		if $g(%d(1))="" { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'MDM_EJFINESS_RM_CSV.Record'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-108,"RowID value must be specified in %d(1) when calling %SQLBuildPurgeIndexForRow for table 'MDM_EJFINESS_RM_CSV.Record'"))) RETURN tSC }
		if pLockRow { if '..%SQLAcquireLock(%d(1)) { set tSC=$select(+tSC:$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'MDM_EJFINESS_RM_CSV.Record' with %ID = '"_%d(1)_"'"),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5521,-114,"Unable to lock row in table 'MDM_EJFINESS_RM_CSV.Record' with %ID = '"_%d(1)_"'"))) RETURN tSC  } else { set tLock=1 }}
		if ((pIndices="")||($lf(pIndices,"%ParentBatchIdx"))),'$listfind(pIgnoreIndexList,"%ParentBatchIdx") {
			if pActions["P" {
				set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2))
			}
			if pActions["B" {
				set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(45)
			}
		}
		if pLockRow { do ..%SQLReleaseLock(%d(1),0,0) set tLock=0 }
	}
	catch {
		if $g(tLock) { do ..%SQLReleaseLock(%d(1),0,0) }
		set tSC=$select(+tSC:$$Error^%apiOBJ(5594,$ze),1:$$AppendStatus^%occSystem(tSC,$$Error^%apiOBJ(5594,$ze)))
	}
	QUIT tSC
%SQLCheckUniqueIndices(pIndices,pOK)
	new d,g,n,o set d=0
	set pOK=1 QUIT
%SQLCopyIcolIntoName()
	if %oper="DELETE" {
		set:$d(%d(1)) %f("ID")=%d(1)
		QUIT
	}
	set:$d(%d(1)) %f("ID")=%d(1) set:$a(%e,2)&&$d(%d(2)) %f("%ParentBatch")=%d(2) set:$a(%e,3)&&$d(%d(3)) %f("%Source")=%d(3) set:$a(%e,4)&&$d(%d(4)) %f("Adressemail")=%d(4) set:$a(%e,5)&&$d(%d(5)) %f("Bureaucedex")=%d(5) set:$a(%e,6)&&$d(%d(6)) %f("CodeAPE")=%d(6) set:$a(%e,7)&&$d(%d(7)) %f("CodePostal")=%d(7) set:$a(%e,8)&&$d(%d(8)) %f("CodecatégorieEtablissement")=%d(8) set:$a(%e,9)&&$d(%d(9)) %f("Codecommune")=%d(9) set:$a(%e,10)&&$d(%d(10)) %f("Codedépartement")=%d(10) set:$a(%e,11)&&$d(%d(11)) %f("Codepays")=%d(11) set:$a(%e,12)&&$d(%d(12)) %f("Codestatutjuridique")=%d(12) set:$a(%e,13)&&$d(%d(13)) %f("Codetypedevoie")=%d(13) set:$a(%e,14)&&$d(%d(14)) %f("Complémentdestinataire")=%d(14) set:$a(%e,15)&&$d(%d(15)) %f("Complémentpointgéographique")=%d(15) set:$a(%e,16)&&$d(%d(16)) %f("Complémentraisonsociale")=%d(16) set:$a(%e,17)&&$d(%d(17)) %f("Datecréation")=%d(17) set:$a(%e,18)&&$d(%d(18)) %f("Datefermeture")=%d(18) set:$a(%e,19)&&$d(%d(19)) %f("DatemodificationSIREN")=%d(19) set:$a(%e,20)&&$d(%d(20)) %f("Datemàjstructure")=%d(20) set:$a(%e,21)&&$d(%d(21)) %f("Indicerépétitionvoie")=%d(21) set:$a(%e,22)&&$d(%d(22)) %f("LibelléAPE")=%d(22) set:$a(%e,23)&&$d(%d(23)) %f("LibellécatégorieEtablissement")=%d(23) set:$a(%e,24)&&$d(%d(24)) %f("Libellécommune")=%d(24) set:$a(%e,25)&&$d(%d(25)) %f("LibellécourtcatégorieEtablissement")=%d(25) set:$a(%e,26)&&$d(%d(26)) %f("Libellécourtcommune")=%d(26) set:$a(%e,27)&&$d(%d(27)) %f("Libellécourtstatutjuridique")=%d(27) set:$a(%e,28)&&$d(%d(28)) %f("Libellédépartement")=%d(28) set:$a(%e,29)&&$d(%d(29)) %f("Libellépays")=%d(29) set:$a(%e,30)&&$d(%d(30)) %f("Libelléstatutjuridique")=%d(30) set:$a(%e,31)&&$d(%d(31)) %f("Libellétypedevoie")=%d(31) set:$a(%e,32)&&$d(%d(32)) %f("Libellévoie")=%d(32) set:$a(%e,33)&&$d(%d(33)) %f("Mentiondistribution")=%d(33) set:$a(%e,34)&&$d(%d(34)) %f("NuméroFINESSEJ")=%d(34) set:$a(%e,35)&&$d(%d(35)) %f("NuméroSIREN")=%d(35) set:$a(%e,36)&&$d(%d(36)) %f("Numérovoie")=%d(36) set:$a(%e,37)&&$d(%d(37)) %f("OriginemodificationSIREN")=%d(37) set:$a(%e,38)&&$d(%d(38)) %f("Qualificationcréation")=%d(38) set:$a(%e,39)&&$d(%d(39)) %f("Raisonsociale")=%d(39) set:$a(%e,40)&&$d(%d(40)) %f("Raisonsocialelongue")=%d(40) set:$a(%e,41)&&$d(%d(41)) %f("Typefermeture")=%d(41) set:$a(%e,42)&&$d(%d(42)) %f("Télécopie")=%d(42) set:$a(%e,43)&&$d(%d(43)) %f("Téléphone")=%d(43) set:$a(%e,44)&&$d(%d(44)) %f("Téléphone2")=%d(44) set:$a(%e,45)&&$d(%d(45)) %f("x__classname")=%d(45)
	QUIT
%SQLDefineiDjVars(%d,subs,master)
	QUIT
%SQLDelete(%rowid,%check,%tstart=1,%mv=0,%polymorphic=0)
	// SQL DELETE method for table MDM_EJFINESS_RM_CSV.Record
	new bva,ce,%d,dc,%e,%ele,%itm,%key,%l,%nc,omcall,%oper,%pos,%s,sn,sqlcode,subs set %oper="DELETE",sqlcode=0,%ROWID=%rowid,%d(1)=%rowid,%e(1)=%rowid,%l=$c(0)
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,2) {
		new %ls lock +^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("MDM.EJFINESS.RM.CSV.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORDelete"
	do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) if sqlcode { set SQLCODE=-106,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler58",,"MDM_EJFINESS_RM_CSV"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  }
	if %e(45)'="" { set sn=$p(%e(45),$e(%e(45)),$l(%e(45),$e(%e(45)))-1) if "MDM.EJFINESS.RM.CSV.Record"'=sn { new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLDelete",%rowid,%check,%tstart,%mv,1) QUIT  }}
	if '$a(%check),'$zu(115,7) do  if sqlcode set SQLCODE=sqlcode do ..%SQLEExit() QUIT  
	. new %fk,%k,%p,%st,%t,%z set %k="",%p("%1")="%d(1),",%p("IDKEY")="%d(1),"
	. for  quit:sqlcode<0  set %k=$o(^rINDEXEXT("F","MDM.EJFINESS.RM.CSV.Record",%k)) quit:%k=""  set %t="" for  set %t=$o(^rINDEXEXT("F","MDM.EJFINESS.RM.CSV.Record",%k,"f",%t)) quit:%t=""  set %st=(%t="MDM.EJFINESS.RM.CSV.Record") set %fk="" for  set %fk=$o(^rINDEXEXT("F","MDM.EJFINESS.RM.CSV.Record",%k,"f",%t,%fk)) quit:%fk=""  x "set %z=$classmethod(%t,%fk_""SQLFKeyRefAction"",%st,%k,$a(%check,2),"_%p(%k)_")" if %z set sqlcode=-124 quit  
	. quit:sqlcode  quit:$a(%check,2)=1
	. if $g(%e(2))'="",'$g(%0CacheLock("MDM.EJFINESS.RM.CSV.Batch","E")),'##class(MDM.EJFINESS.RM.CSV.Batch).%SQLExists(1,,%e(2)) set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler3",,"MDM_EJFINESS_RM_CSV"_"."_"Record","%ParentBatch","%PARENTBATCH") quit
	set ce="" for  { set ce=$order(^oddSQL("MDM_EJFINESS_RM_CSV","Record","DC",ce)) quit:ce=""   do $classmethod(ce,"%SQLDeleteChildren",%d(1),%check,.sqlcode) quit:sqlcode<0  } if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() QUIT } // Delete any children
	if '$a(%check,3) {
		set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2))
	}
	k ^MDM.EJFINESS.RM.CSV.RecordD(%d(1))
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORDelete	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT
	Return
%SQLDeleteTempStreams()
	// Delete all temporary streams
	QUIT
%SQLEExit()
	do ..%SQLUnlock() 
	do ..%SQLUnlockRef()
	if %tstart,$zu(115,1)=1,$TLEVEL { set %tstart=0 TROLLBACK 1 } kill:$g(omcall) %0CacheSQLRA QUIT  
	Return
%SQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key %1.  Called by FKeys that reference this Key to see if the row is defined
	if pLockOnly>=0 { new id set id=%pVal(1) }
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"MDM_EJFINESS_RM_CSV"_"."_"Record"_":"_"%1") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^MDM.EJFINESS.RM.CSV.RecordD(%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
%SQLGetLock(pRowId,pShared=0,pUnlockRef)
	QUIT ..%SQLAcquireLock(pRowId,pShared,.pUnlockRef)
%SQLGetOld(%rowid,%d,%e,sqlcode)
	new s set %d(1)=%rowid,s="" if '$d(^MDM.EJFINESS.RM.CSV.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S %e(45)=$lg(s),%e(2)=$lg(s,43)
	QUIT
%SQLGetOldAll()
	new s set %d(1)=%rowid,s="" if '$d(^MDM.EJFINESS.RM.CSV.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S $lg(%e(45),%e(34),%e(3),%e(40),%e(16),%e(12),%e(30),%e(27),%e(8),%e(23),%e(25),%e(35),%e(19),%e(37),%e(6),%e(22),%e(17),%e(20),%e(18),%e(41),%e(38),%e(14),%e(15),%e(36),%e(21),%e(13),%e(31),%e(32),%e(33),%e(7),%e(5),%e(9),%e(24),%e(26),%e(10),%e(28),%e(11),%e(29),%e(43),%e(44),%e(42),%e(4),%e(2),%e(39))=s
	QUIT
%SQLGetOldIndex(%rowid,%d,pF=0,sqlcode)
	try {
		new tClass,tF,tOid,tSC
		set tOid=..%ComposeOid(%rowid)
		if ''..%OnDetermineClass(tOid,.tClass),tClass'=$classname() {
			set tF=1 do $classmethod(tClass,"%SQLGetOldIndex",%rowid,,.tF,.sqlcode)
			set:$d(tF("%ParentBatch")) %d(2)=tF("%ParentBatch") set:$d(tF("x__classname")) %d(45)=tF("x__classname") 
			RETURN
		}
	}
	catch { }
	new s set %d(1)=%rowid,s="" if '$d(^MDM.EJFINESS.RM.CSV.RecordD(%d(1)),s) { set sqlcode=100 quit  }
	 S %e(45)=$lg(s),%e(2)=$lg(s,43)
	if pF { set:$d(%d(2)) pF("%ParentBatch")=%d(2) set:$d(%d(45)) pF("x__classname")=%d(45)  }
	set sqlcode=0
	QUIT
%SQLInsert(%d,%check,%inssel,%vco,%tstart=1,%mv=0)
	// SQL INSERT method for table MDM_EJFINESS_RM_CSV.Record
	new bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,sqlcode,sn,subs,unlockref,icol set %oper="INSERT",sqlcode=0,%l=$c(0,0,0),unlockref=1
	if $a(%check,7) { new %diu merge %diu=%d }
	if $d(%d(1)),'$zu(115,11) { if %d(1)'="" { set SQLCODE=-111,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler6",,"ID","MDM_EJFINESS_RM_CSV"_"."_"Record") RETURN ""  } kill %d(1) } 
	if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode RETURN "" }
	do:'$a(%check,8) ..%SQLNormalizeFields()
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  } set $zt="ERRORInsert"
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			quit:$zu(115,7)  set %msg=""
			if $g(%d(2))'="",'##class(MDM.EJFINESS.RM.CSV.Batch).%SQLExists($s($a(%check,2)=1:-1,1:0),.unlockref,%d(2)) { set sqlcode=-121,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler41",,"MDM_EJFINESS_RM_CSV"_"."_"Record","%ParentBatch","%PARENTBATCH")_"  "_$g(%msg) quit  }		// Foreign Key Constraint %ParentBatch
		} while 0
		if sqlcode<0 { set SQLCODE=sqlcode do ..%SQLEExit() RETURN "" }		// A constraint failed
	}
	if '$d(%d(1)) { set %d(1)=$i(^MDM.EJFINESS.RM.CSV.RecordD) } elseif %d(1)>$g(^MDM.EJFINESS.RM.CSV.RecordD) { if $i(^MDM.EJFINESS.RM.CSV.RecordD,$zabs(%d(1)-$g(^MDM.EJFINESS.RM.CSV.RecordD))) {}} elseif $d(^MDM.EJFINESS.RM.CSV.RecordD(%d(1))) { set SQLCODE=-119,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler33",,"ID",%d(1),"MDM_EJFINESS_RM_CSV"_"."_"Record"_"."_"ID") do ..%SQLEExit() RETURN "" }
	set:'($d(%d(45))#2) %d(45)="" set:'($d(%d(2))#2) %d(2)=""
	if '$a(%check,2) {
		new %ls lock +^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("MDM.EJFINESS.RM.CSV.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$g(%d(1))) do ..%SQLEExit() RETURN ""  }
	}
	set ^MDM.EJFINESS.RM.CSV.RecordD(%d(1))=$lb(%d(45),%d(34),%d(3),%d(40),%d(16),%d(12),%d(30),%d(27),%d(8),%d(23),%d(25),%d(35),%d(19),%d(37),%d(6),%d(22),%d(17),%d(20),%d(18),%d(41),%d(38),%d(14),%d(15),%d(36),%d(21),%d(13),%d(31),%d(32),%d(33),%d(7),%d(5),%d(9),%d(24),%d(26),%d(10),%d(28),%d(11),%d(29),%d(43),%d(44),%d(42),%d(4),%d(2),%d(39))
	if '$a(%check,3) {
		set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(45)
	}
	lock:$a(%l) -^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#"E"
	TCOMMIT:%tstart&&($zu(115,1)=1)
	do ..%SQLUnlockRef()
	set SQLCODE=0
	QUIT %d(1) 			// %SQLInsert
ERRORInsert	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$ze)
	if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  }
	do ..%SQLEExit()
	RETURN ""
%SQLInvalid(pIcol,pVal) public {
	set:$l($g(pVal))>40 pVal=$e(pVal,1,40)_"..." do:'$d(%n) ..%SQLnBuild() set %msg=$s($g(%msg)'="":%msg_$c(13,10),1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler37",,"MDM_EJFINESS_RM_CSV"_"."_"Record"_"."_$lg(%n,pIcol),$s($g(pVal)'="":$s(pVal="":"<NULL>",pVal=$c(0):"<EMPTY STRING>",1:"'"_pVal_"'"),1:"")),sqlcode=$s(%oper="INSERT":-104,1:-105)
	QUIT sqlcode }
%SQLMissing(fname)
	set sqlcode=-108,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler47",,fname,"MDM_EJFINESS_RM_CSV"_"."_"Record") quit
%SQLNormalizeFields()
	set:$g(%d(2))'="" %d(2)=$select(%d(2)=$c(0)&&$zu(115,13):"",1:%d(2)\1)
	QUIT
%SQLPurgeIndices(pIndices="",pLockExtent=0,pIgnoreIndexList="")
	QUIT ..%PurgeIndices(pIndices,pLockExtent,pIgnoreIndexList)
%SQLQuickLoad(%rowid,%nolock=0,pkey=0,qq=0)
	// Get fields from row where SQLRowID=%rowid
	new d,i,il,subs set:%nolock=2 %nolock=1
	if %nolock=0 { if '..%SQLAcquireLock(%rowid) { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler45",,"MDM_EJFINESS_RM_CSV"_"."_"Record",%rowid),%ROWCOUNT=0 QUIT  } set:$zu(115,2) il=$zu(115,2,0) }
	new s,ul set ul=0,d(1)=%rowid if $zu(115,2)=1 { lock +^MDM.EJFINESS.RM.CSV.RecordD(d(1))#"S":$zu(115,4) if $t { set ul=1 } else { set %qrc=114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler46",,"MDM_EJFINESS_RM_CSV"_"."_"Record",%rowid),%ROWCOUNT=0 quit  } }
	if '$d(^MDM.EJFINESS.RM.CSV.RecordD(d(1)),s) { set SQLCODE=100,%qrc=100 if %nolock=0 { do:$g(il) $zu(115,2,il) }} else { set SQLCODE=0
	if qq { set d(45)=$lg(s) if d(45)'="" { new sn set sn=$p(d(45),$e(d(45)),$l(d(45),$e(d(45)))-1) if "MDM.EJFINESS.RM.CSV.Record"'=sn { if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,1) do:$g(il) $zu(115,2,il) } kill d set:sn'["." sn="User."_sn do $classmethod(sn,"%SQLQuickLoad",%rowid,%nolock,0,1) QUIT  }}}
	set d(2)=$lg(s,43) set d(3)=$lg(s,3) set d(4)=$lg(s,42) set d(5)=$lg(s,31) set d(6)=$lg(s,15) set d(7)=$lg(s,30) set d(8)=$lg(s,9) set d(9)=$lg(s,32) set d(10)=$lg(s,35) set d(11)=$lg(s,37) set d(12)=$lg(s,6) set d(13)=$lg(s,26) set d(14)=$lg(s,22) set d(15)=$lg(s,23) set d(16)=$lg(s,5) set d(17)=$lg(s,17) set d(18)=$lg(s,19) set d(19)=$lg(s,13) set d(20)=$lg(s,18) set d(21)=$lg(s,25) set d(22)=$lg(s,16) set d(23)=$lg(s,10) set d(24)=$lg(s,33) set d(25)=$lg(s,11) set d(26)=$lg(s,34) set d(27)=$lg(s,8) set d(28)=$lg(s,36) set d(29)=$lg(s,38) set d(30)=$lg(s,7) set d(31)=$lg(s,27) set d(32)=$lg(s,28) set d(33)=$lg(s,29) set d(34)=$lg(s,2) set d(35)=$lg(s,12) set d(36)=$lg(s,24) set d(37)=$lg(s,14) set d(38)=$lg(s,21) set d(39)=$lg(s,44) set d(40)=$lg(s,4) set d(41)=$lg(s,20) set d(42)=$lg(s,41) set d(43)=$lg(s,39) set d(44)=$lg(s,40) set d(45)=$lg(s)  }
	do ..%SQLQuickLogicalToOdbc(.d)
	if SQLCODE set %ROWCOUNT=0 set:SQLCODE<0 SQLCODE=-SQLCODE lock:ul -^MDM.EJFINESS.RM.CSV.RecordD(d(1))#"SI" set %qrc=SQLCODE QUIT
	set:qq d=$zobjexport("MDM.EJFINESS.RM.CSV.Record",18),d=$zobjexport(45,18) set i=-1 for  { set i=$o(d(i)) quit:i=""  set d=$zobjexport(d(i),18) } set %qrc=0,%ROWCOUNT=1 lock:ul -^MDM.EJFINESS.RM.CSV.RecordD(d(1))#"SI" if %nolock=0 { do ..%SQLReleaseLock(%rowid,0,0) do:$g(il) $zu(115,2,il) } QUIT
	Return
%SQLReleaseLock(%rowid,s=0,i=0,e="")
	new %d
	set:e="" e=1 set %d(1)=%rowid set s=$e("E",e)_$e("S",s)_$e("D",i)
	lock -^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#s
	QUIT
%SQLReleaseTableLock(s=0,i=0)
	set s=$e("S",s)_$e("D",i) lock -^MDM.EJFINESS.RM.CSV.RecordD#s QUIT 1
	Return
%SQLUnlock()
	lock:$a(%l) -^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#"E"
	QUIT
%SQLUnlockError(cname)
	set sqlcode=-110 if %oper="DELETE" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler48",,"MDM_EJFINESS_RM_CSV"_"."_"Record",cname) } else { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler49",,"MDM_EJFINESS_RM_CSV"_"."_"Record",cname) } quit
	Return
%SQLUnlockRef()
	for %itm=2:1:$g(unlockref) {
		if $lg(unlockref(%itm))'="%UnlockId" { lock -@$lg(unlockref(%itm))#$lg(unlockref(%itm),3) }
		else { do $classmethod($lg(unlockref(%itm),2),$lg(unlockref(%itm)),$lg(unlockref(%itm),3),1,1) }
	}
	QUIT
%SQLUpdate(%rowid,%check,%d,%vco,%tstart=1,%mv=0,%polymorphic=0,%soid)
	// SQL UPDATE method for table MDM_EJFINESS_RM_CSV.Record
	new %e,bva,%ele,%itm,%key,%f,%l,%n,%nc,%oper,%pos,%s,icol,omcall,s,sn,sqlcode,subs,t,unlockref set %oper="UPDATE",sqlcode=0,%ROWID=%rowid,$e(%e,1)=$c(0),%l=$c(0,0,0),unlockref=1
	if '$d(%0CacheSQLRA) { new %0CacheSQLRA set omcall=1 }
	if '$a(%check,7) {
		if '$a(%check),'..%SQLValidateFields(.sqlcode) { set SQLCODE=sqlcode QUIT  }
		do:'$a(%check,8) ..%SQLNormalizeFields()
	}
	if $d(%d(1)),%d(1)'=%rowid { set SQLCODE=-107,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler16",,"ID","MDM_EJFINESS_RM_CSV"_"."_"Record") QUIT  }
	for icol=2:1:45 { set $e(%e,icol)=$c($d(%d(icol))) }
	set %d(1)=%rowid,%e(1)=%rowid
	if '$a(%check,2) {
		new %ls lock +^MDM.EJFINESS.RM.CSV.RecordD(%d(1))#"E":$zu(115,4) set %ls=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,4:2,2:2,1:3,:""))
		set:%ls=2 $e(%check,2)=$c(1) set:%ls=2&&($tlevel) %0CacheLock("MDM.EJFINESS.RM.CSV.Record","E")=1 set:$case(%ls,1:1,2:1,:0) $e(%l)=$c(1)
		if '%ls||(%ls=3) { set SQLCODE=-110,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer",$s('%ls:"SQLFiler40",1:"SQLFiler55"),,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$g(%d(1))) RETURN  }
	}
	if %tstart { TSTART:($zu(115,1)=1)||('$TLEVEL&&($zu(115,1)=2))  }
	set $zt="ERRORUpdate"
	if $g(%vco)="" { do ..%SQLGetOld(%rowid,.%d,.%e,.sqlcode) i sqlcode { s SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"MDM_EJFINESS_RM_CSV"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  } for icol=45,2 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }} else { do ..%SQLGetOldAll() if sqlcode { set SQLCODE=-109,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler59",,"MDM_EJFINESS_RM_CSV"_"."_"Record",%rowid) do ..%SQLEExit() QUIT  } for icol=2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45 { set:'$d(%d(icol)) %d(icol)=%e(icol) set:%d(icol)=%e(icol) $e(%e,icol)=$c(0) }}
	if %e(45)'="" set sn=$p(%e(45),$e(%e(45)),$l(%e(45),$e(%e(45)))-1) if "MDM.EJFINESS.RM.CSV.Record"'=sn new %f do ..%SQLCopyIcolIntoName() do $classmethod(sn,"%SQLUpdate",%rowid,%check,.%d,$g(%vco),%tstart,%mv,1) QUIT
	if '$a(%check) {
		do {
			if $g(%vco)'="" { d @%vco quit:sqlcode<0  }
			quit:$zu(115,7)  set %msg=""
			if $a(%e,2),$g(%updcas)'="%1",$g(%d(2))'="",'##class(MDM.EJFINESS.RM.CSV.Batch).%SQLExists($s($a(%check,2)=1:-1,1:0),.unlockref,%d(2)) { set sqlcode=-122,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler41",,"MDM_EJFINESS_RM_CSV"_"."_"Record","%ParentBatch","%PARENTBATCH")_"  "_$g(%msg) quit  }
			quit:$a(%check,2)=1  quit:$g(%updcas)'=""
			if ($a(%e,2)),%e(2)'="",'$g(%0CacheLock("MDM.EJFINESS.RM.CSV.Batch","E")),'##class(MDM.EJFINESS.RM.CSV.Batch).%SQLExists(1,,%e(2)) { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler21",,"MDM_EJFINESS_RM_CSV"_"."_"Record","%ParentBatch","%PARENTBATCH") quit  }
		} while 0
		if sqlcode { set SQLCODE=sqlcode do ..%SQLEExit() QUIT  }
	}
	if ($zboolean(%e,$c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),1)[$c(1)) {
		set ^MDM.EJFINESS.RM.CSV.RecordD(%d(1))=$listupdate($g(^MDM.EJFINESS.RM.CSV.RecordD(%d(1))),1,$a(%e,45):%d(45),$a(%e,34):%d(34),$a(%e,3):%d(3),$a(%e,40):%d(40),$a(%e,16):%d(16),$a(%e,12):%d(12),$a(%e,30):%d(30),$a(%e,27):%d(27),$a(%e,8):%d(8),$a(%e,23):%d(23),$a(%e,25):%d(25),$a(%e,35):%d(35),$a(%e,19):%d(19),$a(%e,37):%d(37),$a(%e,6):%d(6),$a(%e,22):%d(22),$a(%e,17):%d(17),$a(%e,20):%d(20),$a(%e,18):%d(18),$a(%e,41):%d(41),$a(%e,38):%d(38),$a(%e,14):%d(14),$a(%e,15):%d(15),$a(%e,36):%d(36),$a(%e,21):%d(21),$a(%e,13):%d(13),$a(%e,31):%d(31),$a(%e,32):%d(32),$a(%e,33):%d(33),$a(%e,7):%d(7),$a(%e,5):%d(5),$a(%e,9):%d(9),$a(%e,24):%d(24),$a(%e,26):%d(26),$a(%e,10):%d(10),$a(%e,28):%d(28),$a(%e,11):%d(11),$a(%e,29):%d(29),$a(%e,43):%d(43),$a(%e,44):%d(44),$a(%e,42):%d(42),$a(%e,4):%d(4),$a(%e,2):%d(2),$a(%e,39):%d(39))
	}
	if '$a(%check,3) { 
		if $a(%e,2)||$a(%e,45) {	// %ParentBatchIdx index map
			if $a(%e,2) { set sn(1)=%e(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) k ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2)) }
			set sn(1)=%d(2) set:sn(1)="" sn(1)=-1E14 set sn(2)=%d(1) set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",sn(1),sn(2))=%d(45)
		}
	}
	do ..%SQLUnlock() TCOMMIT:%tstart&&($zu(115,1)=1)
	do ..%SQLUnlockRef()
	set SQLCODE=0 kill:$g(omcall) %0CacheSQLRA
	QUIT
ERRORUpdate	set $zt="",SQLCODE=-415,%msg=$s($g(%msg)'="":%msg_" -- ",1:"")_$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler51",,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record",$ze) if $ze["<FRAMESTACK>" { set %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler52",,$ze,%oper,"MDM_EJFINESS_RM_CSV"_"."_"Record") do ##Class(%SYS.System).WriteToConsoleLog(%msg) if ($zu(67,10,$j)=1)||($zu(67,10,$j)=3) { write !,%msg h 3 } HALT  } do ..%SQLEExit() QUIT  
	Return
%SQLValidateCompFields(sqlcode)
	QUIT 'sqlcode
%SQLValidateFields(sqlcode)
	if $g(%d(3))'="",'(($l(%d(3))'>2000)) { set sqlcode=..%SQLInvalid(3+1,%d(3)) } 
	new %f for %f=4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44 { if $g(%d(%f))'="",'(($l(%d(%f))'>50)) set sqlcode=..%SQLInvalid(%f+1,$g(%d(%f))) quit  } 
	QUIT 'sqlcode
%SQLnBuild() public {
	set %n=$lb(,"ID","%ParentBatch","%Source","Adressemail","Bureaucedex","CodeAPE","CodePostal","CodecatégorieEtablissement","Codecommune","Codedépartement","Codepays","Codestatutjuridique","Codetypedevoie","Complémentdestinataire","Complémentpointgéographique","Complémentraisonsociale","Datecréation","Datefermeture","DatemodificationSIREN","Datemàjstructure","Indicerépétitionvoie","LibelléAPE","LibellécatégorieEtablissement","Libellécommune","LibellécourtcatégorieEtablissement","Libellécourtcommune","Libellécourtstatutjuridique","Libellédépartement","Libellépays","Libelléstatutjuridique","Libellétypedevoie","Libellévoie","Mentiondistribution","NuméroFINESSEJ","NuméroSIREN","Numérovoie","OriginemodificationSIREN","Qualificationcréation","Raisonsociale","Raisonsocialelongue","Typefermeture","Télécopie","Téléphone","Téléphone2","x__classname")
	QUIT }
%Save(related=1) public {
	Set $ZTrap="%SaveERR"
	New %objTX Set sc=1,traninit=0 If '$data(%objTX2) New %objTX2 Set %objTX2=1
	If +$g(%objtxSTATUS)=0 { Set traninit=1 k %objtxSTATUS,%objtxLIST,%objtxOIDASSIGNED,%objtxOIDUNASSIGNED,%objtxMODIFIED,%objtxVERSION k:'$TLevel %objtxTID,%objtxID i '$zu(115,9) { s %objtxSTATUS=1 } else { TStart  s %objtxSTATUS=2 } }
	If $get(%objTX2(+$this)) Set sc=..%BuildObjectGraph(1) Quit:('sc) sc Set intRef=+$this,objValue=$get(%objTX(1,+$g(%objTX(0,intRef)),1)),sc=..%SerializeObject(.objValue,1) Set:(''sc) %objTX(1,%objTX(0,intRef),1)=objValue Quit sc
	Set sc=..%BuildObjectGraph(related+2) If ('sc) ZTrap "SG"
	If '$data(%objTX(2)) s sc=1 GoTo %SaveCOMMIT
	Set %objTX(3)=0,i="" For  Set i=$order(%objTX(2,i),1,data) Quit:i=""  Set intRef=$li(data) If '$data(%objTX(1,+$g(%objTX(0,intRef)),2)) Set %objTX(3,$increment(%objTX(3)))=%objTX(1,%objTX(0,intRef)) Kill %objTX(2,i),%objTX(11,intRef)
	For ptr=1:1 Quit:ptr>%objTX(3)  Set objRef=%objTX(3,ptr),objValue=$get(%objTX(1,+$g(%objTX(0,+objRef)),1)),sc=objRef.%SerializeObject(.objValue) Do  Set %objTX(1,%objTX(0,+objRef),1)=objValue Kill %objTX(1,%objTX(0,+objRef),3) Do $system.CLS.SetModified(objRef,0)
	. If ('sc) ZTrap "SG"
	. i $g(%objtxSTATUS)=2 { Set %objtxMODIFIED(+objRef)=$system.CLS.GetModifiedBits(objRef) }
	. Set intSucc="" For  Set intSucc=$order(%objTX(1,%objTX(0,+objRef),3,intSucc)) Quit:intSucc=""  Kill %objTX(1,%objTX(0,+objRef),3,intSucc),%objTX(1,intSucc,2,%objTX(0,+objRef)) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$increment(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	Kill %objTX(3) Set %objTX(3)=0 For  Set pserial=0 Do  Quit:'pserial
	. Set i="" For  Set i=$order(%objTX(2,i),1,data) Quit:i=""  Set intPred="",intRef=$li(data) For  Set intPred=$order(%objTX(1,%objTX(0,intRef),2,intPred)) Quit:intPred=""  If $get(%objTX(1,intPred,6))=1 Set objValue=$get(%objTX(1,intPred,1)),sc=(%objTX(1,intPred)).%SerializeObject(.objValue,1) If ('sc) { If $d(%objTX(11,+%objTX(1,intPred))) { Set %objTX(2,%objTX(11,+%objTX(1,intPred)),1)=sc } Else { Set %objTX(2,$i(%objTX(2)),1)=sc,%objTX(11,+%objTX(1,intPred))=%objTX(2) } } If (''sc) Set pserial=1,%objTX(1,intPred,1)=objValue Do
	. . Set intSucc="" For  Set intSucc=$order(%objTX(1,intPred,3,intSucc)) Quit:intSucc=""  Kill %objTX(1,intPred,3,intSucc),%objTX(1,intSucc,2,intPred) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$i(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	. . For ptr=1:1 Quit:ptr>%objTX(3)  Set objSerialize=%objTX(3,ptr),objValue=$get(%objTX(1,+$g(%objTX(0,+objSerialize)),1)),sc=objSerialize.%SerializeObject(.objValue) Do  Set %objTX(1,%objTX(0,+objSerialize),1)=objValue Kill %objTX(1,%objTX(0,+objSerialize),3) Do $system.CLS.SetModified(objSerialize,0)
	. . . If ('sc) ZTrap "SG"
	. . . i $g(%objtxSTATUS)=2 { Set %objtxMODIFIED(+objSerialize)=$system.CLS.GetModifiedBits(objSerialize) }
	. . . Set intSucc="" For  Set intSucc=$order(%objTX(1,%objTX(0,+objSerialize),3,intSucc)) Quit:intSucc=""  Kill %objTX(1,%objTX(0,+objSerialize),3,intSucc),%objTX(1,intSucc,2,%objTX(0,+objSerialize)) If '$data(%objTX(1,intSucc,2)) Set %objTX(3,$i(%objTX(3)))=%objTX(1,intSucc) Kill:$d(%objTX(11,+%objTX(1,intSucc))) %objTX(2,%objTX(11,+%objTX(1,intSucc))),%objTX(11,+%objTX(1,intSucc))
	. . Kill %objTX(3) Set %objTX(3)=0
	If $data(%objTX(2))>2 {
		Set sc=$$Error^%apiOBJ(5827,$classname())
		set i="" for  set i=$order(%objTX(2,i)) quit:i=""  if ('$Get(%objTX(2,i,1),1)) set sc=$$EmbedStatus^%apiOBJ(sc,%objTX(2,i,1))
	 	ZTrap "SG"
	}
	Set cmd="" For  Set cmd=$order(%objTX(9,cmd)) Quit:cmd=""  Xecute cmd
%SaveCOMMIT	If traninit { i $g(%objtxSTATUS)=1 { k %objtxSTATUS } else { If $Tlevel { TCommit  } k %objtxSTATUS,%objtxLIST,%objtxOIDASSIGNED,%objtxOIDUNASSIGNED,%objtxMODIFIED,%objtxVERSION k:'$TLevel %objtxTID,%objtxID } }
	Do $system.CLS.SetModified(0) Quit sc
%SaveERR	Set $ZTrap="" If $extract($zerror,1,5)'="<ZSG>" Set sc=$$Error^%apiOBJ(5002,$ZE)
	If $get(traninit) { i $g(%objtxSTATUS)=2 { s sc=$select(+sc:$$%TRollBack^%occTransaction(),1:$$AppendStatus^%occSystem(sc,$$%TRollBack^%occTransaction())) k %objtxTID,%objtxID } else { k %objtxSTATUS } }
	Quit sc }
%SaveData(id) public {
	try {
		set id=$listget(i%"%%OID") if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,lockok=0,tSharedLock=0
		if 'idassigned { set id=$i(^MDM.EJFINESS.RM.CSV.RecordD) do ..%IdSet(id) set:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this)="" }
		if (i%%ParentBatch'="")&&('##class(MDM.EJFINESS.RM.CSV.Batch).%ExistsId(i%%ParentBatch)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"MDM.EJFINESS.RM.CSV.Record.%ParentBatch("_$zu(144,1,i%%ParentBatch)_")")) }
		set zzc10v1=$s(i%%ParentBatch'="":i%%ParentBatch,1:-1E14)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if (i%%Concurrency<4)&&(i%%Concurrency) { lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lockok=2&&($tlevel) %0CacheLock($classname(),"E")=1 if lockok { set lock=1 } else { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^MDM.EJFINESS.RM.CSV.RecordD(id))) {
					set insert=1
					if lock { lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if ('lockok&&..%Concurrency&&$tlevel)||(i%%Concurrency=4) {  lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4) set lockok=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:(lockok=2&&(i%%Concurrency'=4)) %0CacheLock($classname(),"E")=1 set:lockok lock=1 if 'lockok { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if i%%Concurrency=3 { lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"ES") set tSharedLock=1 }
				set ^MDM.EJFINESS.RM.CSV.RecordD(id)=$lb("",i%NuméroFINESSEJ,i%%Source,i%Raisonsocialelongue,i%Complémentraisonsociale,i%Codestatutjuridique,i%Libelléstatutjuridique,i%Libellécourtstatutjuridique,i%CodecatégorieEtablissement,i%LibellécatégorieEtablissement,i%LibellécourtcatégorieEtablissement,i%NuméroSIREN,i%DatemodificationSIREN,i%OriginemodificationSIREN,i%CodeAPE,i%LibelléAPE,i%Datecréation,i%Datemàjstructure,i%Datefermeture,i%Typefermeture,i%Qualificationcréation,i%Complémentdestinataire,i%Complémentpointgéographique,i%Numérovoie,i%Indicerépétitionvoie,i%Codetypedevoie,i%Libellétypedevoie,i%Libellévoie,i%Mentiondistribution,i%CodePostal,i%Bureaucedex,i%Codecommune,i%Libellécommune,i%Libellécourtcommune,i%Codedépartement,i%Libellédépartement,i%Codepays,i%Libellépays,i%Téléphone,i%Téléphone2,i%Télécopie,i%Adressemail,i%%ParentBatch,i%Raisonsociale)
				set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",zzc10v1,id)=""
			}
			else {
				set zzc31v1=$listget(^MDM.EJFINESS.RM.CSV.RecordD(id),43)
				if (i%%ParentBatch'=zzc31v1) {
					kill ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",$s(zzc31v1'="":zzc31v1,1:-1E14),id)
					set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",zzc10v1,id)=""
				}
				set ^MDM.EJFINESS.RM.CSV.RecordD(id)=$lb("",i%NuméroFINESSEJ,i%%Source,i%Raisonsocialelongue,i%Complémentraisonsociale,i%Codestatutjuridique,i%Libelléstatutjuridique,i%Libellécourtstatutjuridique,i%CodecatégorieEtablissement,i%LibellécatégorieEtablissement,i%LibellécourtcatégorieEtablissement,i%NuméroSIREN,i%DatemodificationSIREN,i%OriginemodificationSIREN,i%CodeAPE,i%LibelléAPE,i%Datecréation,i%Datemàjstructure,i%Datefermeture,i%Typefermeture,i%Qualificationcréation,i%Complémentdestinataire,i%Complémentpointgéographique,i%Numérovoie,i%Indicerépétitionvoie,i%Codetypedevoie,i%Libellétypedevoie,i%Libellévoie,i%Mentiondistribution,i%CodePostal,i%Bureaucedex,i%Codecommune,i%Libellécommune,i%Libellécourtcommune,i%Codedépartement,i%Libellédépartement,i%Codepays,i%Libellépays,i%Téléphone,i%Téléphone2,i%Télécopie,i%Adressemail,i%%ParentBatch,i%Raisonsociale)
			}
			set tStatus = 1
		}
		catch tInnerException {
			if ('idassigned) { Set $zobjoid("",$listget(i%"%%OID"))="",i%"%%OID"="" kill:$g(%objtxSTATUS)=2 %objtxOIDASSIGNED(+$this) }
			if (tSharedLock) {  lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"ES") } elseif (lockok=1)&&(insert)&&(i%%Concurrency=4) {  lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)) }
		}
		if lock lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveDirect(id="",idList="",data,concurrency=-1) public {
	try {
		set zzc5v1=$lg(idList,1)
		set zzc5v2=$listget(data,43)
		set zzc5v3=$listget(data,1)
		if concurrency=-1 { set concurrency=$zu(115,10) }
		if id'="" { set insert=0,idassigned=1 } else { set insert=1,idassigned=0 }
		set lock=0,tSharedLock=0
		if 'idassigned { set id=$i(^MDM.EJFINESS.RM.CSV.RecordD) }
		if (zzc5v2'="")&&('##class(MDM.EJFINESS.RM.CSV.Batch).%ExistsId(zzc5v2)) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5824,"MDM.EJFINESS.RM.CSV.Record.%ParentBatch("_$zu(144,1,zzc5v2)_")")) }
		set zzc10v1=$s(zzc5v2'="":zzc5v2,1:-1E14)
		try {
			set tInnerException = ""
			;
			if 'insert {
				if concurrency { lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				if ('$Data(^MDM.EJFINESS.RM.CSV.RecordD(id))) {
					set insert=1
					if lock { lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E") set (lock,lockok) = 0 }
				}
			}
			if insert {
				if concurrency { lock +(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E"):$zu(115,4) set lock=$s('$t:0,1:$case($SYSTEM.Lock.ReturnCode(),0:1,2:2,4:2,:0)) set:lock=2&&($tlevel) %0CacheLock($classname(),"E")=1 if 'lock { Throw ##class(%Exception.StatusException).ThrowIfInterrupt($$Error^%apiOBJ(5803,$classname())) } }
				set ^MDM.EJFINESS.RM.CSV.RecordD(id)=data
				set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",zzc10v1,id)=zzc5v3
			}
			else {
				set zzc31v1=$listget(^MDM.EJFINESS.RM.CSV.RecordD(zzc5v1),43)
				if (zzc5v2'=zzc31v1) {
					kill ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",$s(zzc31v1'="":zzc31v1,1:-1E14),zzc5v1)
					set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",zzc10v1,id)=zzc5v3
				}
				set ^MDM.EJFINESS.RM.CSV.RecordD(id)=data
			}
			set tStatus = 1
		}
		catch tInnerException {
		}
		if lock lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E")
		if $Isobject(tInnerException) { throw tInnerException }
	}
	catch tException {
		set tStatus = tException.AsStatus()
	}
	quit tStatus }
%SaveIndices(pStartId="",pEndId="",lockExtent=0) public {
	If lockExtent {
		Set sc=..%LockExtent(0)
		Quit:('sc) sc
	}
	s id=$order(^MDM.EJFINESS.RM.CSV.RecordD(pStartId),-1),tEndId=$S(pEndId'="":pEndId,1:pStartId)
BSLoop	s id=$O(^MDM.EJFINESS.RM.CSV.RecordD(id)) g:(id="")||(id]]tEndId) BSLoopDun
	Set bsv0N1=$Get(^MDM.EJFINESS.RM.CSV.RecordD(id))
	Set bsv0N2=$listget(bsv0N1,43)
	Set bsv0N3=$s(bsv0N2'="":bsv0N2,1:-1E14)
	Set ^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx",bsv0N3,id)=$listget(bsv0N1,1)
	g BSLoop
BSLoopDun
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit 1
CatchError	Set $ZTrap=""
	If $ZE'="" {
		Set sc = $$Error^%apiOBJ(5002,$ZE)
	}
	If lockExtent { Do ..%UnlockExtent(0) }
	Quit sc }
%SerializeObject(serial,partial=0) public {
	try {
		If $get(%objTX2(+$this)) { Set partial = 1 } ElseIf ('partial) { Set %objTX2(+$this) = 1 }
		Set sc=..%ValidateObject(,0) Throw:('sc) ##class(%Exception.StatusException).ThrowIfInterrupt(sc)
		Set sc=..%NormalizeObject() Throw:('sc) ##class(%Exception.StatusException).ThrowIfInterrupt(sc)
		If r%%ParentBatch'="" { Set:'$data(%objTX(0,+r%%ParentBatch)) %objTX(0,+r%%ParentBatch)=$i(%objTX(1)),%objTX(1,%objTX(0,+r%%ParentBatch))=r%%ParentBatch,%objTX(1,%objTX(0,+r%%ParentBatch),1)=..%ParentBatchGetObject(1),%objTX(1,%objTX(0,+r%%ParentBatch),6)=1 Set M%%ParentBatch=1,i%%ParentBatch=$listget(%objTX(1,%objTX(0,+r%%ParentBatch),1)) }
		s:$g(%objtxSTATUS)=2 %objtxLIST(+$this)=$this
		Set id=$listget(serial),sc=..%SaveData(.id) If ('sc) { Throw ##class(%Exception.StatusException).ThrowIfInterrupt(sc) }
		Set serial=(..%Oid())
		if 'partial {
			Set %objTX2(+$this) = 0
		}
		set sc=1
	}
	catch tException {
		If 'partial { Set %objTX2(+$this) = 0 }
		set sc = tException.AsStatus()
	}
	Quit sc }
%AddToSaveSet(depth=3,refresh=0) public {
	If $data(%objTX(0,+$this)) && ('refresh) Quit 1
	Set sc=1,intOref=+$this
	If refresh,$data(%objTX(0,intOref),index) Set intPoref="" For  Set intPoref=$order(%objTX(1,index,2,intPoref)) Quit:intPoref=""  Kill %objTX(1,%objTX(0,intPoref),3,index),%objTX(1,index,2,%objTX(0,intPoref))
	Set serial=i%"%%OID",%objTX(0,intOref)=$i(%objTX(1)),%objTX(1,%objTX(1))=$this,%objTX(1,%objTX(1),1)=serial,%objTX(1,%objTX(1),6)=1 If (serial '= "") && (depth<2) { Quit 1 } Else { Set %objTX(7,%objTX(1))=$lb(intOref,1) }
	Set Poref=r%%ParentBatch If Poref'="" Set:'$data(%objTX(0,+Poref)) %objTX(6,$i(%objTX(6)))=Poref Set %objTX(8,$i(%objTX(8)))=$lb(+Poref,intOref,2)
exit	Quit sc }
%SortBegin(idxlist="",excludeunique=0)
	if $select(idxlist="":1,$listfind(idxlist,"%ParentBatchIdx"):1,1:0) If $SortBegin(^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx"))
	Quit 1
%SortEnd(idxlist="",commit=1,excludeunique=0) public {
	if $select(idxlist="":1,$listfind(idxlist,"%ParentBatchIdx"):1,1:0) If $SortEnd(^MDM.EJFINESS.RM.CSV.RecordI("%ParentBatchIdx"),commit)
	Quit 1 }
%UnlockExtent(shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -^MDM.EJFINESS.RM.CSV.RecordD
			 Quit 1
		}
		Lock -^MDM.EJFINESS.RM.CSV.RecordD#"I"
		Quit 1
	}
	If 'immediate {
		Lock -^MDM.EJFINESS.RM.CSV.RecordD#"S"
		Quit 1
	}
	Lock -^MDM.EJFINESS.RM.CSV.RecordD#"SI"
	Quit 1 }
%UnlockId(id,shared=0,immediate=0) public {
	If 'shared {
		If 'immediate {
			Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"E")
			Quit 1
		}
		Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"IE")
		Quit 1
	}
	If 'immediate {
		Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SE")
		Quit 1
	}
	Lock -(^MDM.EJFINESS.RM.CSV.RecordD(id)#"SIE")
	Quit 1 }
%ValidateIndices(idxList="",autoCorrect=0,lockOption=1,multiProcess=1,mapList,verbose=1,errors)
	if '$listvalid(idxList) { QUIT $$Error^%apiOBJ(5591,"##class(MDM.EJFINESS.RM.CSV.Record).%ValidateIndices()","idxList",""""" or a $list of index names") }
	if $case(autoCorrect,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(MDM.EJFINESS.RM.CSV.Record).%ValidateIndices()","autoCorrect","'0' or '1'") }
	if $case(lockOption,2:0,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(MDM.EJFINESS.RM.CSV.Record).%ValidateIndices()","lockOption","'0', '1' or '2'") }
	if $case(multiProcess,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(MDM.EJFINESS.RM.CSV.Record).%ValidateIndices()","multiProcess","'0' or '1'") }
	if $case(verbose,1:0,0:0,:1) { QUIT $$Error^%apiOBJ(5591,"##class(MDM.EJFINESS.RM.CSV.Record).%ValidateIndices()","verbose","'0' or '1'") }
	new mapList QUIT $$ValidateIndices^%SYS.SECURITY("MDM.EJFINESS.RM.CSV.Record",idxList,autoCorrect,lockOption,multiProcess,,verbose,.errors)
%ValidateObject(unused=0,checkserial=1) public {
	set sc=1
	If '$system.CLS.GetModified() Quit sc
	If m%%Source Set iv=..%Source If iv'="" Set rc=(..%SourceIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"%Source",iv)
	If m%Adressemail Set iv=..Adressemail If iv'="" Set rc=(..AdressemailIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Adressemail",iv)
	If m%Bureaucedex Set iv=..Bureaucedex If iv'="" Set rc=(..BureaucedexIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Bureaucedex",iv)
	If m%CodeAPE Set iv=..CodeAPE If iv'="" Set rc=(..CodeAPEIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"CodeAPE",iv)
	If m%CodePostal Set iv=..CodePostal If iv'="" Set rc=(..CodePostalIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"CodePostal",iv)
	If m%CodecatégorieEtablissement Set iv=..CodecatégorieEtablissement If iv'="" Set rc=(..CodecatégorieEtablissementIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"CodecatégorieEtablissement",iv)
	If m%Codecommune Set iv=..Codecommune If iv'="" Set rc=(..CodecommuneIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Codecommune",iv)
	If m%Codedépartement Set iv=..Codedépartement If iv'="" Set rc=(..CodedépartementIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Codedépartement",iv)
	If m%Codepays Set iv=..Codepays If iv'="" Set rc=(..CodepaysIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Codepays",iv)
	If m%Codestatutjuridique Set iv=..Codestatutjuridique If iv'="" Set rc=(..CodestatutjuridiqueIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Codestatutjuridique",iv)
	If m%Codetypedevoie Set iv=..Codetypedevoie If iv'="" Set rc=(..CodetypedevoieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Codetypedevoie",iv)
	If m%Complémentdestinataire Set iv=..Complémentdestinataire If iv'="" Set rc=(..ComplémentdestinataireIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Complémentdestinataire",iv)
	If m%Complémentpointgéographique Set iv=..Complémentpointgéographique If iv'="" Set rc=(..ComplémentpointgéographiqueIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Complémentpointgéographique",iv)
	If m%Complémentraisonsociale Set iv=..Complémentraisonsociale If iv'="" Set rc=(..ComplémentraisonsocialeIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Complémentraisonsociale",iv)
	If m%Datecréation Set iv=..Datecréation If iv'="" Set rc=(..DatecréationIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Datecréation",iv)
	If m%Datefermeture Set iv=..Datefermeture If iv'="" Set rc=(..DatefermetureIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Datefermeture",iv)
	If m%DatemodificationSIREN Set iv=..DatemodificationSIREN If iv'="" Set rc=(..DatemodificationSIRENIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"DatemodificationSIREN",iv)
	If m%Datemàjstructure Set iv=..Datemàjstructure If iv'="" Set rc=(..DatemàjstructureIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Datemàjstructure",iv)
	If m%Indicerépétitionvoie Set iv=..Indicerépétitionvoie If iv'="" Set rc=(..IndicerépétitionvoieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Indicerépétitionvoie",iv)
	If m%LibelléAPE Set iv=..LibelléAPE If iv'="" Set rc=(..LibelléAPEIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"LibelléAPE",iv)
	If m%LibellécatégorieEtablissement Set iv=..LibellécatégorieEtablissement If iv'="" Set rc=(..LibellécatégorieEtablissementIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"LibellécatégorieEtablissement",iv)
	If m%Libellécommune Set iv=..Libellécommune If iv'="" Set rc=(..LibellécommuneIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellécommune",iv)
	If m%LibellécourtcatégorieEtablissement Set iv=..LibellécourtcatégorieEtablissement If iv'="" Set rc=(..LibellécourtcatégorieEtablissementIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"LibellécourtcatégorieEtablissement",iv)
	If m%Libellécourtcommune Set iv=..Libellécourtcommune If iv'="" Set rc=(..LibellécourtcommuneIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellécourtcommune",iv)
	If m%Libellécourtstatutjuridique Set iv=..Libellécourtstatutjuridique If iv'="" Set rc=(..LibellécourtstatutjuridiqueIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellécourtstatutjuridique",iv)
	If m%Libellédépartement Set iv=..Libellédépartement If iv'="" Set rc=(..LibellédépartementIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellédépartement",iv)
	If m%Libellépays Set iv=..Libellépays If iv'="" Set rc=(..LibellépaysIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellépays",iv)
	If m%Libelléstatutjuridique Set iv=..Libelléstatutjuridique If iv'="" Set rc=(..LibelléstatutjuridiqueIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libelléstatutjuridique",iv)
	If m%Libellétypedevoie Set iv=..Libellétypedevoie If iv'="" Set rc=(..LibellétypedevoieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellétypedevoie",iv)
	If m%Libellévoie Set iv=..Libellévoie If iv'="" Set rc=(..LibellévoieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Libellévoie",iv)
	If m%Mentiondistribution Set iv=..Mentiondistribution If iv'="" Set rc=(..MentiondistributionIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Mentiondistribution",iv)
	If m%NuméroFINESSEJ Set iv=..NuméroFINESSEJ If iv'="" Set rc=(..NuméroFINESSEJIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"NuméroFINESSEJ",iv)
	If m%NuméroSIREN Set iv=..NuméroSIREN If iv'="" Set rc=(..NuméroSIRENIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"NuméroSIREN",iv)
	If m%Numérovoie Set iv=..Numérovoie If iv'="" Set rc=(..NumérovoieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Numérovoie",iv)
	If m%OriginemodificationSIREN Set iv=..OriginemodificationSIREN If iv'="" Set rc=(..OriginemodificationSIRENIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"OriginemodificationSIREN",iv)
	If m%Qualificationcréation Set iv=..Qualificationcréation If iv'="" Set rc=(..QualificationcréationIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Qualificationcréation",iv)
	If m%Raisonsociale Set iv=..Raisonsociale If iv'="" Set rc=(..RaisonsocialeIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Raisonsociale",iv)
	If m%Raisonsocialelongue Set iv=..Raisonsocialelongue If iv'="" Set rc=(..RaisonsocialelongueIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Raisonsocialelongue",iv)
	If m%Typefermeture Set iv=..Typefermeture If iv'="" Set rc=(..TypefermetureIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Typefermeture",iv)
	If m%Télécopie Set iv=..Télécopie If iv'="" Set rc=(..TélécopieIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Télécopie",iv)
	If m%Téléphone Set iv=..Téléphone If iv'="" Set rc=(..TéléphoneIsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Téléphone",iv)
	If m%Téléphone2 Set iv=..Téléphone2 If iv'="" Set rc=(..Téléphone2IsValid(iv)) If ('rc) Set sc=$$EmbedErr^%occSystem(sc,rc,5802,"Téléphone2",iv)
	Quit sc }
zXMLDTD(top,format,input,dtdlist)
 Quit ##class(%XML.Implementation).XMLDTD("MDM.EJFINESS.RM.CSV.Record",.top,.format,.input,.dtdlist)
zXMLExportInternal()
 New tag,summary,attrsVal,savelocal,aval,k,tmpPrefix,prefixDepth,hasNoContent,hasElement,topAttrs,beginprefix,endprefix,savexsiAttrs,initialxsiAttrs,initlist,initialCR,inlineFlag,popAtEnd,saveTopPrefix,saveTypesPrefix,saveAttrsPrefix,saveUsePrefix,initlist
 Set $ztrap="XMLExportInternalTrap",popAtEnd=0
 Set summary=summaryArg,initialxsiAttrs=xsiAttrs
 If group Quit $$Error^%apiOBJ(6386,"MDM.EJFINESS.RM.CSV.Record")
 If indentFlag Set initialCR=($extract(currentIndent,1,2)=$c(13,10))
 Set id=createId
 Set temp=""
 If id'="" {
   If $piece($get(idlist(+$this)),",",2)'="" Quit 1
   Set idlist(+$this)=id_",1"
 }
 If encoded Set initlist=$lb($get(oreflist),inlineFlagArg),oreflist=1,inlineFlag=inlineFlagArg
 If 'nocycle,('encoded||inlineFlag) {
   If $data(oreflist($this)) Quit $$Error^%apiOBJ(6296,"MDM.EJFINESS.RM.CSV.Record")
   Set oreflist($this)=""
 }
 Set tag=$get(topArg)
 Set tmpi=(($get(typeAttr)'="")&&(typeAttr'="MDM.EJFINESS.RM.CSV.Record"))
 If $IsObject(namespaces) {
     Set popAtEnd=1,saveTopPrefix=topPrefix,saveTypesPrefix=typesPrefix,saveAttrsPrefix=attrsPrefix,saveUsePrefix=usePrefix
     Set sc=namespaces.PushNodeForExport("",$get(local,0),(encoded||tmpi),"",,.topPrefix,.topAttrs,.typesPrefix,.attrsPrefix,.usePrefix)
     If 'sc Quit sc
   Set beginprefix=$select(namespaces.ElementQualified&&usePrefix:typesPrefix,1:"")
   If topAttrs'="" Set temp=temp_" "_topAttrs
   If tag="" Set tag="Record"
   Set xsitype=namespaces.OutputTypeAttribute
 } Else {
   Set saveTopPrefix=topPrefix,saveTypesPrefix=typesPrefix,saveAttrsPrefix=attrsPrefix,saveUsePrefix=usePrefix
   Set typesPrefix=namespaces If (typesPrefix'=""),($extract(typesPrefix,*)'=":") Set typesPrefix=typesPrefix_":"
   If 'encoded Set namespaces=""
   Set (topPrefix,attrsPrefix,topAttrs,beginprefix)=""
   If tag="" Set tag=typesPrefix_"Record"
   Set xsitype=0
 }
 Set local=+$get(local),savelocal=local
 Set endprefix="</"_beginprefix,beginprefix="<"_beginprefix
 If tmpi Set temp=temp_" "_xsiPrefix_"type="""_typesPrefix_"Record"""_xsiAttrs,xsiAttrs=""
   If id'="" Set temp=" "_$select($get(soap12):soapPrefix_"id",1:"id")_"=""id"_id_""""_temp
 If encoded Set temp=temp_xsiAttrs,xsiAttrs=""
 If indentFlag Set %xmlmsg=currentIndent if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg } Set currentIndent=$select(initialCR:"",1:$c(13,10))_currentIndent_indentChars
 If tag[":" Set topPrefix=$piece(tag,":"),tag=$piece(tag,":",2)  If topPrefix'="" Set topPrefix=topPrefix_":"
 Set %xmlmsg="<"_topPrefix_tag_temp if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set attrsVal=attrsArg,attrsArg="" Set %xmlmsg=attrsVal if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set %xmlmsg=">" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 Set val=..NuméroFINESSEJ
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"NuméroFINESSEJ"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"NuméroFINESSEJ>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Raisonsociale
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Raisonsociale"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Raisonsociale>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Raisonsocialelongue
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Raisonsocialelongue"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Raisonsocialelongue>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Complémentraisonsociale
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Complémentraisonsociale"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Complémentraisonsociale>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Codestatutjuridique
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Codestatutjuridique"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Codestatutjuridique>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libelléstatutjuridique
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libelléstatutjuridique"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libelléstatutjuridique>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellécourtstatutjuridique
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellécourtstatutjuridique"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellécourtstatutjuridique>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..CodecatégorieEtablissement
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"CodecatégorieEtablissement"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"CodecatégorieEtablissement>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..LibellécatégorieEtablissement
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"LibellécatégorieEtablissement"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"LibellécatégorieEtablissement>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..LibellécourtcatégorieEtablissement
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"LibellécourtcatégorieEtablissement"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"LibellécourtcatégorieEtablissement>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..NuméroSIREN
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"NuméroSIREN"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"NuméroSIREN>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..DatemodificationSIREN
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"DatemodificationSIREN"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"DatemodificationSIREN>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..OriginemodificationSIREN
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"OriginemodificationSIREN"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"OriginemodificationSIREN>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..CodeAPE
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"CodeAPE"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"CodeAPE>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..LibelléAPE
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"LibelléAPE"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"LibelléAPE>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Datecréation
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Datecréation"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Datecréation>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Datemàjstructure
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Datemàjstructure"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Datemàjstructure>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Datefermeture
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Datefermeture"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Datefermeture>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Typefermeture
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Typefermeture"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Typefermeture>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Qualificationcréation
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Qualificationcréation"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Qualificationcréation>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Complémentdestinataire
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Complémentdestinataire"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Complémentdestinataire>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Complémentpointgéographique
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Complémentpointgéographique"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Complémentpointgéographique>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Numérovoie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Numérovoie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Numérovoie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Indicerépétitionvoie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Indicerépétitionvoie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Indicerépétitionvoie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Codetypedevoie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Codetypedevoie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Codetypedevoie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellétypedevoie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellétypedevoie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellétypedevoie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellévoie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellévoie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellévoie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Mentiondistribution
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Mentiondistribution"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Mentiondistribution>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..CodePostal
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"CodePostal"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"CodePostal>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Bureaucedex
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Bureaucedex"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Bureaucedex>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Codecommune
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Codecommune"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Codecommune>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellécommune
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellécommune"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellécommune>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellécourtcommune
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellécourtcommune"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellécourtcommune>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Codedépartement
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Codedépartement"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Codedépartement>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellédépartement
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellédépartement"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellédépartement>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Codepays
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Codepays"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Codepays>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Libellépays
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Libellépays"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Libellépays>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Téléphone
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Téléphone"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Téléphone>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Téléphone2
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Téléphone2"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Téléphone2>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Télécopie
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Télécopie"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Télécopie>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 Set val=..Adressemail
 If val'="" {
   Set %xmlmsg=currentIndent_beginprefix_"Adressemail"_$select(xsitype:" "_xsiPrefix_"type="""_schemaPrefix_"string""",1:"")_">"_$select(val=$c(0):"",1:$select((val["<")||(val[">")||(val["&"):"<![CDATA["_$replace(val,"]]>","]]]]><![CDATA[>")_"]]>",1:val))_endprefix_"Adressemail>" if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }
 }
 If indentFlag { Set currentIndent=$extract(currentIndent,1,*-$length(indentChars)) Set %xmlmsg=currentIndent if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg }}
 Set %xmlmsg="</"_topPrefix_tag_">"
 if $data(%xmlBlock) { Do xeWrite^%occXMLInternal } else { write %xmlmsg } If indentFlag,'initialCR if $data(%xmlBlock) { Set %xmlmsg="" Do xeWriteLine^%occXMLInternal } else { write ! } Set $extract(currentIndent,1,2)=""
 If '$IsObject(namespaces) || (popAtEnd=1) Set topPrefix=saveTopPrefix,typesPrefix=saveTypesPrefix,attrsPrefix=saveAttrsPrefix,usePrefix=saveUsePrefix
 If popAtEnd Do namespaces.PopNode()
 If encoded Set oreflist=$list(initlist),inlineFlag=$list(initlist,2)
 If 'encoded||inlineFlag {
   If 'nocycle Kill oreflist($this)
 }
 Quit sc
XMLExportInternalTrap Set $ztrap=""
 If $data(val) , $IsObject(val) , ($piece($ze,">",1)="<METHOD DOES NOT EXIST") {
   Set sc=$$Error^%apiOBJ(6249,$classname(val))
 } Else {
   Set sc=$$Error^%apiOBJ(5002,$ze)
 }
XMLExportExit 
 If '$IsObject(namespaces) || (popAtEnd=1) Set topPrefix=saveTopPrefix,typesPrefix=saveTypesPrefix,attrsPrefix=saveAttrsPrefix,usePrefix=saveUsePrefix
 If popAtEnd Do namespaces.PopNode()
 Quit sc
zXMLGetSchemaImports(imports,classes)
 Quit ##class(%XML.Implementation).XMLGetSchemaImports("MDM.EJFINESS.RM.CSV.Record",.imports,.classes)
zXMLImportAttributes()
 ;
 Quit 1
XMLImportAttrErr Quit $$Error^%apiOBJ(6260,ref,$get(@(tree)@("d",$zlascii(attributeList(ref),13))),@(tree)@("d",$zlascii(nodelist,9))_$$XMLImportAttrLocation(nodelist))
XMLImportFixedAttrErr Quit $$Error^%apiOBJ(6320,ref,$get(@(tree)@("d",$zlascii(attributeList(ref),13))),@(tree)@("d",$zlascii(nodelist,9))_$$XMLImportAttrLocation(nodelist))
XMLImportAttrLocation(nodelist) new msg,loc
 Set loc=$lb($zlascii(nodelist,21),$zlascii(nodelist,25))
 If loc="" Quit ""
 Set msg=$get(^%qMsg("%ObjectErrors",$s(""'="":$zcvt("","L"),1:$s($mvv(58)="":"en",1:$mvv(58))),"XMLImportLocation")," (%1,%2)")
 Quit $$FormatText^%occMessages(msg,$listget(loc,1),$listget(loc,2))
zXMLImportInternal()
 New child,childlist,node,nodelist,inner,innerlist,data,encodedArray,key,nsIndex,savechild,savechildlist,saveinner,saveinnnerlist,exists
 Set $ztrap="XMLImportInternalTrap"
 Set encoded=$case($piece(fmt,",",1),"":0,"literal":0,"encoded":1,"encoded12":1,:"")
 If encoded="" Quit $$Error^%apiOBJ(6231,fmt)
 Set nsIndex=$select($get(namespace)="":"",1:$get(@(tree)@("N",namespace)))
 Set node=nodeArg,nodelist=nodeArgChildlist
 If tag'=@(tree)@("d",$zlascii(nodelist,9)) Set inner=node Goto XMLImportMalformed
 If bareProjection Quit $$Error^%apiOBJ(6386,"MDM.EJFINESS.RM.CSV.Record")
 If encoded {
   Do XMLImportAttrnode() If $data(attributeList("id")) Set idlist(node)=$this
 }
 If $zboolean(+($zlascii(nodelist,13)#16),+1,1) Quit 1
 Set sc=$$XMLImportElements()
XMLImportExit Quit sc
XMLImportElements() ;
XMLLOOP1 Set descriptor=$zlascii(nodelist,$zwascii(nodelist,17)) Set child=($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)_","_$zwascii(nodelist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else { Set child="" }} For { Quit:child=""  Quit:(descriptor#16)'=2  Set descriptor=$piece(child,",",2)+4 Set child=$piece(child,",",1)_","_descriptor Set descriptor=$zlascii(nodelist,descriptor) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else {Set child="" }} } Goto XMLLOOP2
XMLLOOP For  { Set descriptor=$piece(child,",",2)+4 Set child=$piece(child,",",1)_","_descriptor Set descriptor=$zlascii(nodelist,descriptor) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set child=##class(%XML.ImportHandler).NextChild(tree,node,.nodelist,child,.descriptor) } Else {Set child="" }} Quit:child=""  Quit:(descriptor#16)'=2  }
XMLLOOP2 If child="" Quit sc
 If (descriptor#16)'=0 Set inner=child Goto XMLImportMalformedNoTag
 Set childlist=@(tree)@((descriptor\16))
 Set tag=@(tree)@("d",$zlascii(childlist,9))
 If tag="NuméroFINESSEJ" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..NuméroFINESSEJ=data
   Goto XMLLOOP } }
 If tag="Raisonsociale" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Raisonsociale=data
   Goto XMLLOOP } }
 If tag="Raisonsocialelongue" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Raisonsocialelongue=data
   Goto XMLLOOP } }
 If tag="Complémentraisonsociale" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Complémentraisonsociale=data
   Goto XMLLOOP } }
 If tag="Codestatutjuridique" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Codestatutjuridique=data
   Goto XMLLOOP } }
 If tag="Libelléstatutjuridique" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libelléstatutjuridique=data
   Goto XMLLOOP } }
 If tag="Libellécourtstatutjuridique" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellécourtstatutjuridique=data
   Goto XMLLOOP } }
 If tag="CodecatégorieEtablissement" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..CodecatégorieEtablissement=data
   Goto XMLLOOP } }
 If tag="LibellécatégorieEtablissement" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..LibellécatégorieEtablissement=data
   Goto XMLLOOP } }
 If tag="LibellécourtcatégorieEtablissement" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..LibellécourtcatégorieEtablissement=data
   Goto XMLLOOP } }
 If tag="NuméroSIREN" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..NuméroSIREN=data
   Goto XMLLOOP } }
 If tag="DatemodificationSIREN" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..DatemodificationSIREN=data
   Goto XMLLOOP } }
 If tag="OriginemodificationSIREN" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..OriginemodificationSIREN=data
   Goto XMLLOOP } }
 If tag="CodeAPE" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..CodeAPE=data
   Goto XMLLOOP } }
 If tag="LibelléAPE" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..LibelléAPE=data
   Goto XMLLOOP } }
 If tag="Datecréation" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Datecréation=data
   Goto XMLLOOP } }
 If tag="Datemàjstructure" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Datemàjstructure=data
   Goto XMLLOOP } }
 If tag="Datefermeture" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Datefermeture=data
   Goto XMLLOOP } }
 If tag="Typefermeture" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Typefermeture=data
   Goto XMLLOOP } }
 If tag="Qualificationcréation" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Qualificationcréation=data
   Goto XMLLOOP } }
 If tag="Complémentdestinataire" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Complémentdestinataire=data
   Goto XMLLOOP } }
 If tag="Complémentpointgéographique" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Complémentpointgéographique=data
   Goto XMLLOOP } }
 If tag="Numérovoie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Numérovoie=data
   Goto XMLLOOP } }
 If tag="Indicerépétitionvoie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Indicerépétitionvoie=data
   Goto XMLLOOP } }
 If tag="Codetypedevoie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Codetypedevoie=data
   Goto XMLLOOP } }
 If tag="Libellétypedevoie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellétypedevoie=data
   Goto XMLLOOP } }
 If tag="Libellévoie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellévoie=data
   Goto XMLLOOP } }
 If tag="Mentiondistribution" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Mentiondistribution=data
   Goto XMLLOOP } }
 If tag="CodePostal" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..CodePostal=data
   Goto XMLLOOP } }
 If tag="Bureaucedex" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Bureaucedex=data
   Goto XMLLOOP } }
 If tag="Codecommune" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Codecommune=data
   Goto XMLLOOP } }
 If tag="Libellécommune" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellécommune=data
   Goto XMLLOOP } }
 If tag="Libellécourtcommune" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellécourtcommune=data
   Goto XMLLOOP } }
 If tag="Codedépartement" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Codedépartement=data
   Goto XMLLOOP } }
 If tag="Libellédépartement" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellédépartement=data
   Goto XMLLOOP } }
 If tag="Codepays" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Codepays=data
   Goto XMLLOOP } }
 If tag="Libellépays" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Libellépays=data
   Goto XMLLOOP } }
 If tag="Téléphone" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Téléphone=data
   Goto XMLLOOP } }
 If tag="Téléphone2" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Téléphone2=data
   Goto XMLLOOP } }
 If tag="Télécopie" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Télécopie=data
   Goto XMLLOOP } }
 If tag="Adressemail" {
   If ($get(namespace)="")||$case($zwascii(childlist,19),0:1,nsIndex:1,:0) {
   If encoded Set savechild=child,savechildlist=childlist
   If encoded,$$XMLImportIdChild() {
     Set data=idlist(child)
   } Else { Goto:'sc XMLImportExit
     If $zboolean(+($zlascii(childlist,13)#16),+1,1) { Set data=""
     } Else {
             If (($length(childlist)-$zwascii(childlist,17)-3)\4)>1 {
               Set data="" If '##class(%XML.ImportHandler).SerializeNode(tree,child,0,0,.data,,,childlist) Goto XMLImportErrchild
             } Else { Set descriptor=$zlascii(childlist,$zwascii(childlist,17)) Set data=($zlascii(@(tree)@($piece(child,",",1)),$piece(child,",",2))\16)_","_$zwascii(childlist,17) If (descriptor#16)=3 { If (descriptor\16)'=0 { Set data=##class(%XML.ImportHandler).NextChild(tree,child,.childlist,data,.descriptor) } Else { Set data="" }}
               If data'="" { Goto:(descriptor#16)=0 XMLImportErrchild Set data=@(tree)@("d",(descriptor\16)) }}
             If data="" Set data=$c(0)
             If data'="" Goto:('$s(($l(data)'>50):1,1:$$Error^%apiOBJ(7201,data,50))) XMLImportErrchild
     }
     If encoded Do XMLImportAttrchild() If $data(attributeList("id")) Set idlist(child)=data
   }
   If encoded Set child=savechild,childlist=savechildlist
   Set ..Adressemail=data
   Goto XMLLOOP } }
 Goto XMLImportBadTagchild
XMLImportBadTagchild Set inner=child
XMLImportBadTag Quit $$Error^%apiOBJ(6237,tag_$$XMLImportLocation(inner))
XMLImportBadTypenode Set inner=node Goto XMLImportBadType
XMLImportBadTypechild Set inner=child
XMLImportBadType Quit $$Error^%apiOBJ(6277,class,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)))_$$XMLImportLocation(inner))
XMLImportErrnode Set inner=node Goto XMLImportErr
XMLImportErrchild Set inner=child
XMLImportErr
 Set data=##class(%XML.ImportHandler).GetNextChild(tree,inner,"")
 If (data'="") {
   If ($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))#16)'=0 {
     Quit $$Error^%apiOBJ(6232,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner),$extract(@(tree)@("d",($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))\16)),1,200))
   } Else {
     Quit $$Error^%apiOBJ(6253,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner),@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(data,",",1)),$piece(data,",",2))\16)),9)))
   }
 } Else {
   Quit $$Error^%apiOBJ(6252,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner))
 }
XMLImportIdErr Set sc=$$Error^%apiOBJ(6236,id,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner)) Quit sc
XMLImportMalformed Set sc=$$Error^%apiOBJ(6233,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)))_$$XMLImportLocation(inner)) Quit sc
XMLImportMalformedNoTag Set node=$select($piece(inner,",",1)<=0:0,1:$zlascii(@(tree)@($piece(inner,",",1)),1)_","_$zlascii(@(tree)@($piece(inner,",",1)),5)),sc=$$Error^%apiOBJ(6254,$select(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16))),$select(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))#16)=0:@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),9)),1:@(tree)@("d",($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)))_$$XMLImportLocation(node)) Quit sc
XMLImportNSchild Set inner=child
XMLImportNS Set sc=$$Error^%apiOBJ(6235,@(tree)@("d",$zlascii(@(tree)@(($zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2))\16)),9))_$$XMLImportLocation(inner)) Quit sc
XMLImportLocation(node) new msg,loc
 Set loc=$lb($zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),21),$zlascii(@(tree)@(($zlascii(@(tree)@($piece(node,",",1)),$piece(node,",",2))\16)),25))
 If loc="" Quit ""
 Set msg=$get(^%qMsg("%ObjectErrors",$s(""'="":$zcvt("","L"),1:$s($mvv(58)="":"en",1:$mvv(58))),"XMLImportLocation")," (%1,%2)")
 Quit $$FormatText^%occMessages(msg,$listget(loc,1),$listget(loc,2))
XMLImportInternalTrap Set $ztrap=""
 Set loc=$select($ZE["<CLASS DOES NOT EXIST>":" for element "_tag_$$XMLImportLocation(child),1:"")
 Quit $$Error^%apiOBJ(5002,$ZE_loc)
XMLImportIdChild() Set inner=child,innerlist=childlist,tmp=$$XMLImportId(),child=inner,childlist=innerlist Quit tmp
XMLImportId() ;
 Do XMLImportAttrinner()
 If $data(attributeList("href")) {
   Set id=$case($data(@(tree)@("d",$zlascii(attributeList("href"),13))),1:@(tree)@("d",$zlascii(attributeList("href"),13)),0:"",:##class(%XML.ImportHandler).GetAttribute(tree,attributeList("href")))
   If $extract(id)="#" {
     Set tmp=$select($get(@(tree)@("i",$extract(id,2,*)))="":"",1:$piece(@(tree)@("i",$extract(id,2,*)),",",1)_","_$piece(@(tree)@("i",$extract(id,2,*)),",",2)) If tmp="" Goto XMLImportIdErr
     Set inner=tmp
     Set descriptor=$zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2)) Set innerlist=@(tree)@((descriptor\16))
   }
 } ElseIf $data(attributeList("ref")),($get(@(tree)@("n",$zwascii(attributeList("ref"),9)))="http://www.w3.org/2003/05/soap-encoding") {
   Set id=$case($data(@(tree)@("d",$zlascii(attributeList("ref"),13))),1:@(tree)@("d",$zlascii(attributeList("ref"),13)),0:"",:##class(%XML.ImportHandler).GetAttribute(tree,attributeList("ref")))
   Set tmp=$select($get(@(tree)@("i",id))="":"",1:$piece(@(tree)@("i",id),",",1)_","_$piece(@(tree)@("i",id),",",2)) If tmp="" Goto XMLImportIdErr
   Set inner=tmp
   Set descriptor=$zlascii(@(tree)@($piece(inner,",",1)),$piece(inner,",",2)) Set innerlist=@(tree)@((descriptor\16))
 } ElseIf '$data(attributeList("id")) {
   Quit 0
 }
 Quit $data(idlist(inner))
XMLImportAttrnode()
 If $get(attributeList)=node Quit
 Kill attributeList
 Set attributeList=node
 Set offset=29 While offset<$zwascii(nodelist,17) { Set attribute=$extract(nodelist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
XMLImportAttrchild()
 If $get(attributeList)=child Quit
 Kill attributeList
 Set attributeList=child
 Set offset=29 While offset<$zwascii(childlist,17) { Set attribute=$extract(childlist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
XMLImportAttrinner()
 If $get(attributeList)=inner Quit
 Kill attributeList
 Set attributeList=inner
 Set offset=29 While offset<$zwascii(innerlist,17) { Set attribute=$extract(innerlist,offset,offset+15)
    Set attrname=@(tree)@("d",$zlascii(attribute,1))
    Set attributeList(attrname)=attribute
 Set offset=offset+16 }
 Quit
zXMLIsObjectEmpty(ignoreNull)
 If ..NuméroFINESSEJ'="" Quit 0
 If ..Raisonsociale'="" Quit 0
 If ..Raisonsocialelongue'="" Quit 0
 If ..Complémentraisonsociale'="" Quit 0
 If ..Codestatutjuridique'="" Quit 0
 If ..Libelléstatutjuridique'="" Quit 0
 If ..Libellécourtstatutjuridique'="" Quit 0
 If ..CodecatégorieEtablissement'="" Quit 0
 If ..LibellécatégorieEtablissement'="" Quit 0
 If ..LibellécourtcatégorieEtablissement'="" Quit 0
 If ..NuméroSIREN'="" Quit 0
 If ..DatemodificationSIREN'="" Quit 0
 If ..OriginemodificationSIREN'="" Quit 0
 If ..CodeAPE'="" Quit 0
 If ..LibelléAPE'="" Quit 0
 If ..Datecréation'="" Quit 0
 If ..Datemàjstructure'="" Quit 0
 If ..Datefermeture'="" Quit 0
 If ..Typefermeture'="" Quit 0
 If ..Qualificationcréation'="" Quit 0
 If ..Complémentdestinataire'="" Quit 0
 If ..Complémentpointgéographique'="" Quit 0
 If ..Numérovoie'="" Quit 0
 If ..Indicerépétitionvoie'="" Quit 0
 If ..Codetypedevoie'="" Quit 0
 If ..Libellétypedevoie'="" Quit 0
 If ..Libellévoie'="" Quit 0
 If ..Mentiondistribution'="" Quit 0
 If ..CodePostal'="" Quit 0
 If ..Bureaucedex'="" Quit 0
 If ..Codecommune'="" Quit 0
 If ..Libellécommune'="" Quit 0
 If ..Libellécourtcommune'="" Quit 0
 If ..Codedépartement'="" Quit 0
 If ..Libellédépartement'="" Quit 0
 If ..Codepays'="" Quit 0
 If ..Libellépays'="" Quit 0
 If ..Téléphone'="" Quit 0
 If ..Téléphone2'="" Quit 0
 If ..Télécopie'="" Quit 0
 If ..Adressemail'="" Quit 0
 Quit 1
zXMLNew(document,node,containerOref="")
	Quit (##class(MDM.EJFINESS.RM.CSV.Record).%New())
zXMLSchema(top="",format="",namespacePrefix="",input=0,refOnly=0,schema)
 Quit ##class(%XML.Implementation).XMLSchema("MDM.EJFINESS.RM.CSV.Record",top,format,namespacePrefix,input,refOnly,.schema)
%ParentBatchGetObject(force=0) public {
	Quit $select(r%%ParentBatch=""||(i%%ParentBatch'=""):$select(i%%ParentBatch="":"",1:$listbuild(i%%ParentBatch_"")),(''..%ParentBatch.%GetSwizzleObject(force,.oid)):oid,1:"") }
%ParentBatchGetObjectId(force=0) public {
	Quit $listget(..%ParentBatchGetObject(force)) }
%ParentBatchGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),43),1:"") }
%ParentBatchGetSwizzled(noswizzle=0) public {
	If r%%ParentBatch'="" Quit r%%ParentBatch
	If i%%ParentBatch="" Quit ""
	Set oid=$select(i%%ParentBatch="":"",1:$listbuild(i%%ParentBatch_""))
	Set oref=##class("MDM.EJFINESS.RM.CSV.Batch").%Open(oid,,.sc) If ('sc)||(oref="") Do:$get(^%SYS("ThrowSwizzleError"),0) $zutil(96,3,19,1) Quit ""
	Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=oref Do $system.CLS.SetModifiedBits(modstate)
	Do oref.RecordsRelate($this)
	Quit oref }
%ParentBatchNewObject() public {
	Set newobject=##class("MDM.EJFINESS.RM.CSV.Batch").%New() If newobject="" Quit ""
	Set ..%ParentBatch=newobject
	Do ..%ParentBatch.RecordsRelate($this)
	Quit newobject }
%ParentBatchOnDelete(id="",concurrency=-1) [ SQLCODE,id ] public { New SQLCODE 
	 ;---&sql(select %ID into :id from MDM_EJFINESS_RM_CSV.Record where %ParentBatch = :id)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xENo0Rz8NYWsGPeei22fPKMfWF2G","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xENo0Rz8NYWsGPeei22fPKMfWF2G")||($ze["<ZSQLU>") { d %0dsqlF } else { throw } }
	Quit $Select(SQLCODE:1,1:$$Error^%apiOBJ(5823,$classname()_"."_"%ParentBatch")) }
 q
%0dsqlF	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM MDM_EJFINESS_RM_CSV . Record WHERE %ParentBatch = :id"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),,"MDM.EJFINESS.RM.CSV.Record.CLS")
	q
%ParentBatchRClose(%qHandle) [ SQLCODE ] public {
	New SQLCODE
	Do %qHandle.%Destruct() Kill %qHandle
	Quit 1 }
%ParentBatchRExec(%qHandle,inverse) [ SQLCODE,inverse ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	 ;---&sql(DECLARE Q2 CURSOR FOR
 	 ;---		SELECT ID FROM MDM_EJFINESS_RM_CSV.Record where %ParentBatch=:inverse)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE, inverse
	 
	 ;---&sql(OPEN Q2)
	try { if $g(%qHandle)'="" { s SQLCODE=-101 } else { s %qHandle=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEdLbbXIZQb08S4cm4pQVTRrWZmW","%New") if '$isobject(%qHandle) s %qHandle=$$%0dsqlH() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEdLbbXIZQb08S4cm4pQVTRrWZmW")||($ze["<ZSQLU>") { s %qHandle=$$%0dsqlH() } else { throw } }
	If SQLCODE Quit $$Error^%apiOBJ(5821,"SQLCODE = "_SQLCODE_$s($get(%msg)="":"",1:" %msg="_%msg))
	Quit 1 }
%ParentBatchRFetch(%qHandle,FetchCount=0,RowSet,ReturnCount,AtEnd) [ SQLCODE,inverse ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE,inverse 
	Set RowSet="",ReturnCount=0,AtEnd=0
	For {
		 ;---&sql(FETCH Q2 INTO :c1)
 		 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
		if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
		If 'SQLCODE { Set RowSet=RowSet_$lb(c1),ReturnCount=ReturnCount+1 Quit:ReturnCount=FetchCount||(($length(RowSet)+($length(RowSet)\ReturnCount))>24000) } Else { Set AtEnd=1 Quit }
	}
	Quit 1 }
 q
%0dsqlH()	n %xxsql
	s %xxsql("S",1)="DECLARE Q2 CURSOR FOR SELECT ID "
	s %xxsql("S",2)="INTO  :i%sqlcol1"
	s %xxsql("S",3)="FROM MDM_EJFINESS_RM_CSV . Record WHERE %ParentBatch = :inverse"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),",1,Q2,","MDM.EJFINESS.RM.CSV.Record.CLS",1)
%ParentBatchRelate(oref) public {
	If r%%ParentBatch=oref Quit 1
	If i%%ParentBatch'="",$listget(oref."%%OID")=i%%ParentBatch Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=oref Do $system.CLS.SetModifiedBits(modstate) Quit 1
	If r%%ParentBatch'="" Do ..%ParentBatchUnRelate(r%%ParentBatch)
	Set tmp=i%%ParentBatch Kill i%%ParentBatch,r%%ParentBatch Set r%%ParentBatch=oref,i%%ParentBatch=tmp
	Quit 1 }
%ParentBatchSet(newvalue) public {
	If newvalue="" {
		If r%%ParentBatch="",i%%ParentBatch="" Quit 1
	} Else {
		If '$isobject(newvalue) Quit $$Error^%apiOBJ(5807,newvalue)
		If r%%ParentBatch=newvalue Quit 1
		If r%%ParentBatch="",i%%ParentBatch'="",i%%ParentBatch=$listget(newvalue."%%OID") Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch=newvalue Do newvalue.RecordsRelate($this),$system.CLS.SetModifiedBits(modstate) Quit 1
	}
	If r%%ParentBatch'="" Do r%%ParentBatch.RecordsUnRelate($this)
	Set r%%ParentBatch=newvalue,i%%ParentBatch=0,i%%ParentBatch=""
	If newvalue'="" Do newvalue.RecordsRelate($this)
	Quit 1 }
%ParentBatchSetObject(newvalue) public {
	If r%%ParentBatch="" Set i%%ParentBatch=$listget(newvalue) Quit 1
	If newvalue'="",i%%ParentBatch=$listget(newvalue) Quit 1
	Set sc=..%ParentBatch.%GetSwizzleObject(0,.oid) Quit:('sc) sc
	If newvalue'="",$listget(oid)=$listget(newvalue) Quit 1
	Do ..%ParentBatch.RecordsUnRelate($this) Set r%%ParentBatch="",i%%ParentBatch=0,i%%ParentBatch=$listget(newvalue) Quit 1 }
%ParentBatchSetObjectId(newid) public {
	Quit ..%ParentBatchSetObject($select(newid="":"",1:$listbuild(newid_""))) }
%ParentBatchUnRelate(oref) public {
	If r%%ParentBatch=oref Set r%%ParentBatch="",i%%ParentBatch=0,i%%ParentBatch="" Quit 1
	If r%%ParentBatch'="" Quit $$Error^%apiOBJ(5499)
	Set i%%ParentBatch=0,i%%ParentBatch=""
	Quit 1 }
%ParentBatchUnSwizzle(force=0) public {
 Quit:r%%ParentBatch="" 1
	Set sc=..%ParentBatch.%GetSwizzleObject(force,.newvalue) Quit:('sc) sc
	Set modstate=$system.CLS.GetModifiedBits() Set r%%ParentBatch="" Do $system.CLS.SetModifiedBits(modstate)
 Set i%%ParentBatch=$listget(newvalue)
 Quit 1 }
%SourceGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),3),1:"") }
zAdressemailGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),42),1:"") }
zBureaucedexGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),31),1:"") }
zCodeAPEGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),15),1:"") }
zCodePostalGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),30),1:"") }
zCodecatégorieEtablissementGetS(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),9),1:"") }
zCodecommuneGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),32),1:"") }
zCodedépartementGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),35),1:"") }
zCodepaysGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),37),1:"") }
zCodestatutjuridiqueGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),6),1:"") }
zCodetypedevoieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),26),1:"") }
zComplémentdestinataireGetStore(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),22),1:"") }
zComplémentpointgéographiqueGet(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),23),1:"") }
zComplémentraisonsocialeGetStor(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),5),1:"") }
zDatecréationGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),17),1:"") }
zDatefermetureGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),19),1:"") }
zDatemodificationSIRENGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),13),1:"") }
zDatemàjstructureGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),18),1:"") }
zIndicerépétitionvoieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),25),1:"") }
zLibelléAPEGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),16),1:"") }
zLibellécatégorieEtablissementG(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),10),1:"") }
zLibellécommuneGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),33),1:"") }
zLibellécourtcatégorieEtablisse(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),11),1:"") }
zLibellécourtcommuneGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),34),1:"") }
zLibellécourtstatutjuridiqueGet(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),8),1:"") }
zLibellédépartementGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),36),1:"") }
zLibellépaysGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),38),1:"") }
zLibelléstatutjuridiqueGetStore(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),7),1:"") }
zLibellétypedevoieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),27),1:"") }
zLibellévoieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),28),1:"") }
zMentiondistributionGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),29),1:"") }
zNuméroFINESSEJGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),2),1:"") }
zNuméroSIRENGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),12),1:"") }
zNumérovoieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),24),1:"") }
zOriginemodificationSIRENGetSto(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),14),1:"") }
zQualificationcréationGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),21),1:"") }
zRaisonsocialeGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),44),1:"") }
zRaisonsocialelongueGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),4),1:"") }
zTypefermetureGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),20),1:"") }
zTélécopieGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),41),1:"") }
zTéléphoneGetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),39),1:"") }
zTéléphone2GetStored(id) public {
	Quit $Select(id'="":$listget($g(^MDM.EJFINESS.RM.CSV.RecordD(id)),40),1:"") }
zExtentClose(%qHandle) [ SQLCODE ] public {
	New SQLCODE
	Do %qHandle.%Destruct() Kill %qHandle
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) } Else { Set sc=1 }
	Quit sc }
zExtentExecute(%qHandle) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set sc=1
	 ;---&sql(DECLARE QExtent CURSOR FOR
 	 ;---		 SELECT ID FROM MDM_EJFINESS_RM_CSV.Record)
 	 ;--- ** SQL PUBLIC Variables: SQLCODE
	 
	 ;---&sql(OPEN QExtent)
	try { if $g(%qHandle)'="" { s SQLCODE=-101 } else { s %qHandle=$classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEzCD5KfUQZ5tEUkpOTJtyOVhoUH","%New") if '$isobject(%qHandle) s %qHandle=$$%0dsqlK() } } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEzCD5KfUQZ5tEUkpOTJtyOVhoUH")||($ze["<ZSQLU>") { s %qHandle=$$%0dsqlK() } else { throw } }
	If SQLCODE { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%Message=$g(%msg) Set sc=$$Error^%apiOBJ(5821,"SQLCODE = "_SQLCODE) } Else { Set sc=1 }
	Quit sc }
zExtentFetch(%qHandle,Row,AtEnd=0) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set Row="",AtEnd=0
	 ;---&sql(FETCH QExtent INTO :c1)
 	 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
	if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
	If 'SQLCODE { Set Row=$lb(c1) Set sc=1 }
	ElseIf SQLCODE=100 { Set AtEnd=1,sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) }
	Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set AtEnd=1,sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	QUIT sc }
zExtentFetchRows(%qHandle,FetchCount=0,RowSet,ReturnCount,AtEnd) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	Set RowSet="",ReturnCount=0,AtEnd=0
	For {
		 ;---&sql(FETCH QExtent INTO :c1)
 		 ;--- ** SQL PUBLIC Variables: %ROWCOUNT, %ROWID, %msg, SQLCODE
		if $isobject($g(%qHandle))'=1 { s SQLCODE=-102 } else { do %qHandle.FET() if SQLCODE=0 { s c1=%qHandle.sqlcol1 } }
		If 'SQLCODE { Set RowSet=RowSet_$lb(c1),ReturnCount=ReturnCount+1 Quit:(ReturnCount=FetchCount)||(($l(RowSet)+($l(RowSet)\ReturnCount))>24000) } Else { Set AtEnd=1 Quit }
	}
	If 'SQLCODE { Set sc=1 } ElseIf SQLCODE=100 { Set sc=1 Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.%ROWCOUNT=$g(%ROWCOUNT) } Else { Set:$isobject($g(%sqlcontext)) %sqlcontext.%SQLCODE=SQLCODE,%sqlcontext.Message=$g(%msg) Set sc=$$Error^%apiOBJ(5540,SQLCODE,$get(%msg)) }
	Quit sc }
zExtentSendODBC(%qHandle,array,qacn,%qrc,piece,ColumnCount) [ SQLCODE ] public { New %ROWCOUNT,%ROWID,%msg,SQLCODE 
	set %qrc=0,piece=0
	for {
		set rc=..ExtentFetch(.%qHandle,.row,.atend)
		if ('rc) { set %qrc=-400 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=-400,%sqlcontext.Message=$g(%msg) do ProcessError^%ourProcedure(rc,$get(%sqlcontext),.%qrc,.%msg),Logerr^%SYS.SQLSRV(%qrc,"","SP",.%msg) RETURN  }
		if row="" { set %qrc=100 set:$isobject($get(%sqlcontext)) %sqlcontext.SQLCode=100 RETURN  }
		RETURN:$zobjexport(row,60)
	}
	RETURN }
 q
%0dsqlK()	n %xxsql
	s %xxsql("S",1)="DECLARE QExtent CURSOR FOR SELECT ID "
	s %xxsql("S",2)="INTO  :i%sqlcol1"
	s %xxsql("S",3)="FROM MDM_EJFINESS_RM_CSV . Record"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	return $$BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Runtime","","","MDM.EJFINESS.RM.CSV",0,"",),",1,QExtent,","MDM.EJFINESS.RM.CSV.Record.CLS",1)
zExtentFunc() public {
	try {
		set tSchemaPath = ##class(%SQL.Statement).%ClassPath($classname())
			set tStatement = ##class(%SQL.Statement).%New(,tSchemaPath)
			do tStatement.prepare(" SELECT ID FROM MDM_EJFINESS_RM_CSV . Record")
		set tResult = tStatement.%Execute()
	}
	catch tException { if '$Isobject($Get(tResult)) { set tResult = ##class(%SQL.StatementResult).%New() } set tResult.%SQLCODE=tException.AsSQLCODE(),tResult.%Message=tException.AsSQLMessage() }
	Quit tResult }
zExtentGetInfo(colinfo,parminfo,idinfo,%qHandle,extoption=0,extinfo) public {
 s parminfo=""
	s:'($d(^oddCOM($classname(),"q","Extent",21),clientinfo)#2)&&'$s($d(^(2),clientinfo)#2&&(clientinfo'=$classname()):$d(^oddCOM(clientinfo,"q","Extent",21),clientinfo)#2||($d(^oddDEF(clientinfo,"q","Extent",21),clientinfo)#2),1:$d(^oddDEF($classname(),"q","Extent",21),clientinfo)#2) clientinfo=""
	Set:extoption extinfo=$s($d(^oddCOM($classname(),"q","Extent",38))#2:^(38),$d(^oddCOM($g(^(2),$classname()),"q","Extent",38))#2:^(38),1:$s($d(^oddDEF($g(^oddCOM($classname(),"q","Extent",2),$classname()),"q","Extent",38))#2:^(38),1:""))
	If clientinfo'="" Set colinfo=$listget(clientinfo,1),parminfo=$listget(clientinfo,2),idinfo=$listget(clientinfo,3) Quit 1
	Set colinfo="",parminfo="",idinfo=$listbuild(0)
	Set sc=$$externaltype^%apiOLE("%Library.Integer",.exttypes,"0")
	Quit:('sc) sc
	s:'($d(^oddCOM($classname(),"q","Extent",23),names)#2)&&'$s($d(^(2),names)#2&&(names'=$classname()):$d(^oddCOM(names,"q","Extent",23),names)#2||($d(^oddDEF(names,"q","Extent",23),names)#2),1:$d(^oddDEF($classname(),"q","Extent",23),names)#2) names=""
	s:'($d(^oddCOM($classname(),"q","Extent",22),captions)#2)&&'$s($d(^(2),captions)#2&&(captions'=$classname()):$d(^oddCOM(captions,"q","Extent",22),captions)#2||($d(^oddDEF(captions,"q","Extent",22),captions)#2),1:$d(^oddDEF($classname(),"q","Extent",22),captions)#2) captions=""
	For i=1:1:1 Set colinfo=colinfo_$listbuild($listbuild($listget(names,i),$piece(exttypes,",",i),$listget(captions,i)))
	Set idinfo=$listbuild(1,$classname())
	s ^oddCOM($classname(),"q","Extent",21)=$listbuild(colinfo,parminfo,idinfo)
	Quit 1 }
zExtentGetODBCInfo(colinfo,parminfo,qHandle) public {
	Set metadata=$lb(1,1,"ID",4,10,0,2,"ID","Record","MDM_EJFINESS_RM_CSV","",$c(0,0,0,0,0,0,0,0,0,0,0,1),0)
	Set colcount=$li(metadata,2),cmdlen=colcount*10,parmcount=$li(metadata,3+cmdlen),pmdlen=parmcount*6,parminfo=$li(metadata,cmdlen+3,cmdlen+pmdlen+3)
	Set colinfo=$li(metadata,2,2+cmdlen)
	Quit 1 }
%ParentBatchCheck(id="",lockonly=0) public {
	Quit ##class(MDM.EJFINESS.RM.CSV.Batch).%1Check(id,lockonly)
}
%ParentBatchDelete(id="",concurrency=-1) public {
	quit ..%ParentBatchOnDelete(.id,.concurrency) }
%ParentBatchSQLFKeyExists(%p...)
	new %ROWCOUNT,%ROWID,%msg,SQLCODE
	 ;---&sql(SELECT %ParentBatch
 	 ;---	     FROM   MDM_EJFINESS_RM_CSV.Record
 	 ;---	     WHERE  %ParentBatch=:%p(1))
 	 ;--- ** SQL PUBLIC Variables: %p, SQLCODE
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEEGjBrzK8fgxan20NiTkJgYipb7","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEEGjBrzK8fgxan20NiTkJgYipb7")||($ze["<ZSQLU>") { d %0dsqlO } else { throw } }
	QUIT SQLCODE=0
 q
%0dsqlO	n %xxsql
	s %xxsql("S",1)="SELECT %ParentBatch FROM MDM_EJFINESS_RM_CSV . Record WHERE %ParentBatch = :%p(1)"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),,"MDM.EJFINESS.RM.CSV.Record.CLS")
	q
%ParentBatchSQLFKeyRefAction(pSameTable=0,k,pNoLock=0,%p...)
		// ON UPDATE/DELETE NOACTION
	quit:%p(1)="" 0 new rx set rx=..%ParentBatchSQLFKeyExists(%p(1)) set:rx %msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler27",,"MDM_EJFINESS_RM_CSV"_"."_"Record",k,"%ParentBatch","'%ParentBatch'") QUIT rx
%ParentBatchIdxExists(K1,id="") [ K1,SQLCODE,id ] public { New SQLCODE 
	 ;---&sql(SELECT %ID INTO :id FROM MDM_EJFINESS_RM_CSV.Record WHERE (:K1 is not null and %ParentBatch = :K1) OR (:K1 IS NULL AND %ParentBatch IS NULL))
 	 ;--- ** SQL PUBLIC Variables: K1, SQLCODE, id
	try { d $classmethod("%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEVTHEGJMGVtHGhIODn9ZDh3dMJM","%New") } catch { if $ze["<CLASS DOES NOT EXIST>"&&($ze["%sqlcq."_$tr($namespace,"%_-$@:/\[]^ ","pudsssssssss")_".xEVTHEGJMGVtHGhIODn9ZDh3dMJM")||($ze["<ZSQLU>") { d %0dsqlQ } else { throw } }
	Quit $select('SQLCODE:1,1:0) }
 q
%0dsqlQ	n %xxsql
	s %xxsql("S",1)="SELECT %ID INTO :id FROM MDM_EJFINESS_RM_CSV . Record WHERE ( :K1 IS NOT NULL AND %ParentBatch = :K1 ) OR ( :K1 IS NULL AND %ParentBatch IS NULL )"
	s %xxsql("M","%occSqlfuncinc")=$c(1),%xxsql("M","ALLOCGVEC")=$c(1),%xxsql("M","CACHENAMES")="",%xxsql("M","DEBUG")=$c(1),%xxsql("M","FORKNETDMN")=$c(1)
	s %xxsql("M","HASHLOCK")=$c(1),%xxsql("M","NETNEWHASH")=$c(1),%xxsql("M","SOAP12ENCns")="0"_$c(1,1)_"0"_$c(1)_"""http://www.w3.org/2003/05/soap-encoding"""
	s %xxsql("M","USEDIRCACHE")=$c(1),%xxsql("M","USEGCNT")=2,%xxsql("M","USEGOFF")=$c(1),%xxsql("M","USELOST")=$c(1),%xxsql("M","ZVERSION")=$c(1)
	s %xxsql("I","%callout")="",%xxsql("I","%occSqlfunc")="",%xxsql("I","%systemInclude")="",%xxsql("I","%xmlMap")="",%xxsql("I","Ensemble")=""
	s %xxsql("NS")="IRISAPP",%xxsql("PTools")="-1:0:0::0:1"
	d BuildQuery^%SYS.SQLSRV(.%xxsql,$lb("Logical","","","MDM.EJFINESS.RM.CSV",0,"",),,"MDM.EJFINESS.RM.CSV.Record.CLS")
	q
zIDKEYCheck(K1,lockonly=0,concurrency=-1) public {
	s id=K1,exists=..%ExistsId(id) q:'exists $s('lockonly:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) s:concurrency=-1 concurrency=$select(..#DEFAULTCONCURRENCY="$zu(115,10)":$zu(115,10),1:$xecute("q "_..#DEFAULTCONCURRENCY)) if concurrency { s status=..%LockId(id,1) q:('status) status } if 'lockonly { s exists=..%ExistsId(id) d:concurrency ..%UnlockId(id,1,0) quit $s('exists:$$Error^%apiOBJ(5797,$classname(),"IDKEY",id),1:1) } else { d:concurrency ..%UnlockId(id,1,0) q 1 }
}
zIDKEYDelete(K1,concurrency=-1) public {
	Quit ..%DeleteId(.K1,concurrency) }
zIDKEYExists(K1,id="") public {
	s id=K1 q ..%ExistsId(K1) }
zIDKEYOpen(K1,concurrency=-1,sc) public { s:'($d(sc)#2) sc=1
	Quit ..%OpenId(.K1,concurrency,.sc) }
zIDKEYSQLCheckUnique(pFromOrig=0,%pID,%pVals...)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLCheckUnique")
zIDKEYSQLExists(pLockOnly=0,pUnlockRef,%pVal...)
	// SQL Foreign Key validation entry point for Key IDKEY.  Called by FKeys that reference this Key to see if the row is defined
	if pLockOnly>=0 { new id set id=%pVal(1) }
	if pLockOnly>=0 { if '..%SQLGetLock(id,1,.pUnlockRef) { set sqlcode=-114,%msg=$$FormatMessage^%occMessages(,"%SQL.Filer","SQLFiler39",,"MDM_EJFINESS_RM_CSV"_"."_"Record"_":"_"IDKEY") QUIT 0 } }
	if pLockOnly<1 {
		new qv set qv=$d(^MDM.EJFINESS.RM.CSV.RecordD(%pVal(1))) QUIT:pLockOnly=-1 qv
		do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) quit qv
	}
	else { do:'$g(pUnlockRef) ..%SQLReleaseLock(id,1) QUIT 1 }
	Return
zIDKEYSQLFindPKeyByConstraint(%con)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindPKeyByConstraint")
zIDKEYSQLFindRowIDByConstraint(%con,pInternal=0)
 QUIT $$Error^%apiOBJ(5758,"%Persistent::IDKEYSQLFindRowIDByConstraint")
%sqllistUCQ(t) public	{
	s t("%0dsqlA")="",t("%0dsqlC")="",t("%0dsqlF")="",t("%0dsqlH")="",t("%0dsqlK")="",t("%0dsqlO")="",t("%0dsqlQ")=""
}