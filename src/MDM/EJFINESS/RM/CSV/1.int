ROUTINE MDM.EJFINESS.RM.CSV.1 [Type=INT,Generated]
 ;MDM.EJFINESS.RM.CSV.1
 ;Generated for class MDM.EJFINESS.RM.CSV.  Do NOT edit. 09/09/2020 02:18:27PM
 ;;6B446B55;MDM.EJFINESS.RM.CSV
 ;
zGetGeneratedClasses(pClasses) public {
	Kill pClasses
	Set pClasses("MDM.EJFINESS.RM.CSV.Batch")=""
	Set pClasses("MDM.EJFINESS.RM.CSV.Record")=""
	Set pClasses($classname())=""
	Quit 1 }
zGetObject(pStream,pObject,pTimeout=-1,pLookAhead="",pLabelFound=0) public {
	Try {
		Set tStatus = 1
		Set pObject = ""
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,,pTimeout,"UTF-8", .tStatus)
			If ('tStatus) Quit
		}
		Set tObjectName = $parameter($this,"OBJECTNAME")
		Set tObject = $classmethod(tObjectName,"%New")
		If '$IsObject(tObject) {
			Set tStatus = $$Error^%apiOBJ(6201,tObjectName)
			Quit
		}
		Set tObject.%Source = pStream.Name
		Set tGetTopFields = $parameter(tObject,"INCLUDETOPFIELDS")
		If pStream.AtEnd && (""=pLookAhead) {
			Set tStatus = $$Error^%apiOBJ("<EnsRecordMap>ErrStreamAtEnd", pStream.Name)
			Quit
		}
		Set pStream.CharEncoding = "UTF-8"
		Set tStatus = ..GetRecord(pStream, tObject, tGetTopFields, pTimeout, .pLookAhead, pLabelFound)
		If ('tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	If ('tStatus) { Set pObject = "" }
	Else { Set pObject = tObject }
	Quit tStatus }
zGetRecord(pStream,pObject,pGetTopFields,pTimeout,pLookAhead="",pLabelFound=0) public {
	Set tStatus = 1
	If pLabelFound { Set tRecLabel = "" } 
	Else { Set tRecLabel = "" } 
	Set tStatus = ..chunkRecord(pStream, .tRecordData, .tCharCount, "", pTimeout, $char(10), tRecLabel, .pLookAhead, "")
	If ('tStatus) Quit tStatus
	Set tMaxLocal = $zutil(96,39)
	Set tRecordData("charcount") = +$get(tCharCount)
	Set tCurrChunk = 1
	Set tTopPiece = 1
	Set tCurrSep = 1
	Set tStrings = 1
	Set tCurrString = ""
	Set tSeps = $listbuild($char(59))
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Else {
		Set tCurrString = tRecordData(tCurrChunk)
		Set tCurrPiece = 1
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NuméroFINESSEJ = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Raisonsociale = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Raisonsocialelongue = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Complémentraisonsociale = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Codestatutjuridique = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libelléstatutjuridique = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellécourtstatutjuridique = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodecatégorieEtablissement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibellécatégorieEtablissement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibellécourtcatégorieEtablissement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.NuméroSIREN = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.DatemodificationSIREN = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.OriginemodificationSIREN = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodeAPE = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.LibelléAPE = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Datecréation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Datemàjstructure = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Datefermeture = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Typefermeture = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Qualificationcréation = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Complémentdestinataire = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Complémentpointgéographique = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Numérovoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Indicerépétitionvoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Codetypedevoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellétypedevoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellévoie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Mentiondistribution = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.CodePostal = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Bureaucedex = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Codecommune = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellécommune = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellécourtcommune = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Codedépartement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellédépartement = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Codepays = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Libellépays = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Téléphone = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Téléphone2 = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Télécopie = tCurrString
	}
	If '$data(tRecordData(tCurrChunk, "block")) {
		Set tCurrString = $piece(tRecordData(tCurrChunk), $char(59), tTopPiece)
	}
	Do ..checkMerge(.tCurrChunk, .tRecordData, .tCurrString, $char(59), .tTopPiece)
	If pGetTopFields {
		Set pObject.Adressemail = tCurrString
	}
	Quit tStatus }
zPutObject(pStream,pObject,pFlush=1,pPadArray) public {
	Try {
		Set tStatus = 1
		If '$IsObject(pStream) {
			Set tFilename = pStream
			Set pStream = ##class(%IO.FileStream).%New()
			Do pStream.Open(tFilename,"WAE",,"UTF-8", .tStatus)
			If ('tStatus) Quit
		}
		Set tHasTopFields = $parameter(pObject,"INCLUDETOPFIELDS")
		Set pStream.CharEncoding = "UTF-8"
		Set tStatus = ..PutRecord(pStream, pObject, tHasTopFields, .pPadArray)
		If ('tStatus) Quit
		If pFlush Do pStream.Flush(.tStatus)
		If ('tStatus) Quit
	}
	Catch ex {
		Set tStatus = ex.AsStatus()
	}
	Quit tStatus }
zPutRecord(pStream,pObject,pHasTopFields,pPadArray) public {
	Set tStatus = 1
	Do pStream.Write($select(pHasTopFields: pObject.NuméroFINESSEJ,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Raisonsociale,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Raisonsocialelongue,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Complémentraisonsociale,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Codestatutjuridique,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libelléstatutjuridique,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellécourtstatutjuridique,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.CodecatégorieEtablissement,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibellécatégorieEtablissement,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibellécourtcatégorieEtablissement,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.NuméroSIREN,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.DatemodificationSIREN,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.OriginemodificationSIREN,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.CodeAPE,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.LibelléAPE,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Datecréation,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Datemàjstructure,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Datefermeture,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Typefermeture,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Qualificationcréation,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Complémentdestinataire,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Complémentpointgéographique,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Numérovoie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Indicerépétitionvoie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Codetypedevoie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellétypedevoie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellévoie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Mentiondistribution,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.CodePostal,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Bureaucedex,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Codecommune,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellécommune,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellécourtcommune,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Codedépartement,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellédépartement,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Codepays,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Libellépays,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Téléphone,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Téléphone2,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Télécopie,1: ""),0)
	Do pStream.Write($char(59) _ $select(pHasTopFields: pObject.Adressemail,1: ""),0)
	Do pStream.Write($char(10), 0, .tStatus)
	If ('tStatus) Quit tStatus
	Quit tStatus }
zgetType() public {
	Quit "delimited" }
zListGetInfo(colinfo,parminfo,idinfo,qHandle,extoption=0,extinfo) public {
	Set colinfo=$lb($lb("name",10,"name"),$lb("modified",9,"modified"),$lb("size",5,"size"))
	Set parminfo=""
	Set idinfo=$lb(0,"")
	If extoption {
		Set extinfo=$lb("",$lb($lb("",""),$lb("",""),$lb("","")))
	}
	Quit 1 }
zListGetODBCInfo(colinfo,parminfo,qHandle) public {
	Set metadata=$lb(1,3,"name",12,50,0,2,"name","CSV","MDM_EJFINESS_RM","",$c(0,0,0,0,0,0,0,0,0,0,0,0),"modified",11,23,3,2,"modified","CSV","MDM_EJFINESS_RM","",$c(0,0,0,0,0,0,0,0,0,0,0,0),"size",4,10,0,2,"size","CSV","MDM_EJFINESS_RM","",$c(0,0,0,0,0,0,0,0,0,0,0,0),0)
	Set colcount=$li(metadata,2),cmdlen=colcount*10,parmcount=$li(metadata,3+cmdlen),pmdlen=parmcount*6,parminfo=$li(metadata,cmdlen+3,cmdlen+pmdlen+3)
	Set colinfo=$li(metadata,2,2+cmdlen)
	Quit 1 }